#summary Digital bathroom scale which logs weight and data on SD Card
#labels Featured

= Introduction =

On this project I hacked a digital bathroom scale, for write (log) my weight variations over time, on a memory SD Card. I write the information (time + weight) on a comma separated values (CSV) file (weight.csv) so I can build a graph using OpenOffice.

*[http://blip.tv/file/get/Jpcasainho-SDCardBathroomScale20090814198.ogg See this video]* that shows the scale working. Here is a picture of a graph made using the data written on "weight.csv" file:

[http://casainho-projects.googlecode.com/svn-history/r65/trunk/sdcard_bathroom_scale/images/weight_vs_time_graph-20090814.jpg]

Firmware source code, schematics sources and pictures of current work can be found on [http://code.google.com/p/casainho-projects/source/browse/trunk/sdcard_bathroom_scale/ SVN].

==Observations and things to improve==
The system works almost perfectly. Although there are some things I would like to improve:

 * The size of the characters on LCD are very small for this application, since my eyes are far from it when I am weighting myself. Maybe I can find another LCD?

 * Me and my girlfriend, we both need to lost weight, we both use the scale. Luckily our weight values are very different and I can differ them on system and have 2 different files on SD Card to register our weights separately. I would prefer to have some way to identify each person, so more people could use the scale if needed;

=Technical details=
==The original cheap scale I bought on market== 
I bought the cheapest digital bathroom scale I could found on market, it were 20â‚¬, Fagor model BB-90. Other scales just looks the same, because they have the same number of LCD digits and the system appears to behave in the same way.

Picture:

[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/sdcard_bathroom_scale-20090703-01.jpg]

==How to get the weight value==
First I thought that I could read the sensors and got an analog voltage relative to weight but I couldn't find a way to do it. Next a friend at work give me the idea to try read the signals that went to original LCD, and it was a simple and easy way to have what I need :-)

The original LCD have 15 pins, 3 backplanes and 12 segments. I did understand how the LCD signals works reading this [http://casainho-projects.googlecode.com/svn-history/r71/trunk/sdcard_bathroom_scale/docs/lcd-an0162.pdf application note].

The segments signals have voltage that can be read directly by the LPC2103. The backplanes signals can't be ready directly by the LPC2103 (I think) and then I made a very simple voltage detector using a LM258 opamp so I get a "trigger" signal every time the backplane signal get near is maximum value. Since all the signals are sequential and have the same period of time, I just look for one backplane signal (just one voltage detector circuit with the LM258 opamp).

The next 2 pictures shows a backplane signal and 2 segments signals.

[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/osci_image-20090605-10.jpg]

[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/osci_image-20090605-11.jpg]

The next picture shows a backplane signal and a "trigger" signal I got using an LM258 opamp working as a comparator, like a signal value detector.

[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/osci_image-20090615-01.jpg]

===Understanding the logic of each signal=== 
After I saw on oscilloscope each signal that went to the original LCD, I quickly understand that 3 were backplanes and 12 were segments, because backplanes have always the same shape while the others varies with the segments on/off, with the weight value.

I had to understand which segments were turned on/off to represent each number on the original LCD, and not having the original LCD working any more, I had to make some tests to figure the information I were looking for.

I decided to write on LCD module HD44780 the state of each segment (synchronized with each backplane signal) and then try a few different known weight, so I had a known digits:

{{{
             0.0 kg

          backplane a:   0 0 0 . 0 0 0 . 0 1 1 . 0 1 1

          backplane b:   0 0 0 . 0 0 0 . 1 0 1 . 1 0 1

          backplane c:   0 0 0 . 1 0 0 . 0 1 1 . 1 1 1

--------------------------------------------------

             1xx.x kg

          backplane a:   0 0 1 . x x x . x x x . x x x
                                               
          backplane b:   0 0 1 . x x x . x x x . x x x

          backplane c:   0 0 0 . x x x . x x x . x x x

--------------------------------------------------

             2x.x kg

          backplane a:   0 0 0 . 0 1 1 . x x x . x x x

          backplane b:   0 0 0 . 0 1 0 . x x x . x x x

          backplane c:   0 0 0 . 1 1 1 . x x x . x x x

--------------------------------------------------

             6x.x kg

          backplane a:   0 0 0 . 0 1 0 . x x x . x x x

          backplane b:   0 0 0 . 1 1 1 . x x x . x x x

          backplane c:   0 0 0 . 1 1 1 . x x x . x x x
}}}

After reading about [http://en.wikipedia.org/wiki/Seven-segment_display 7 segments displays on wikipedia], turned out in my head that the segments are:

{{{            
               a          y a b   <-- backplane a
             f   b        f g c   <-- backplane b
               g          z e d   <-- backplane c
             e   c
               d
}}}

Example of number 6, all segments turned on except segment b.:

{{{
             6x.x kg

          backplane a:   0 0 0 . 0 1 0 . x x x . x x x

          backplane b:   0 0 0 . 1 1 1 . x x x . x x x

          backplane c:   0 0 0 . 1 1 1 . x x x . x x x
                  
               a          y a b   <-- backplane a
             f   b        f g c   <-- backplane b
               g          z e d   <-- backplane c
             e   c
               d
}

===Schematic===
[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090817-original_lcd.jpg]

==Selection of microcontroller==
Arduino/Atmel AVR, or ARM? - I really like Arduino, mainly because it's Open Hardware/Firmware and there is a lot of Open Hardware modules for it. I prefer to use ARM instead of Arduino/AVR because I have the same Free Software tools PLUS cheap, Open JTAG debugger! I don't really like the fact that Atmel have a closed, proprietary, debugger.

I am being using ARM7 LPC2103 which is the cheaper on this times and have all the functionalities and working power that I need. I decided to use Olimex dev. board [http://www.olimex.com/dev/lpc-h2103.html LPC-H2103].

==LCD module added==
I needed to use another LCD since I couldn't maintain the original one. I decided to try the cheap ones based on [http://en.wikipedia.org/wiki/HD44780_Character_LCD HD44780], since I have experience with them and I got some with me. Luckily, this LCD just enters perfect in the place of the original :-)

On the next picture we can see the LCD module and also the connections I made to original PCB using flat cable, on the pads that connected to original LCD.

[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/sdcard_bathroom_scale-20090703-08.jpg]

===Schematic===
[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090817-lcd_module.jpg]

==SD Card and FAT library==
I decide to use SD Card memory to hold the data because I had good experiences in past with this kind of memory card, using SPI BUS. Also I can find relative cheap cards easily.

My reference page about SD Cards is this one: [http://elm-chan.org/docs/mmc/mmc_e.html How to Use MMC/SDC by ChaN].

===Schematic===
[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090817-sd_card.jpg]

=== Fat file system library===
I use [http://elm-chan.org/fsw/ff/00index_e.html FatFs by ChaN] file system drivers which have a Free Software license, are very complete and have good documentation.
===Data written to SD Card===
Here is some real data recorded on SD Card "weight.csv" file:
{{{
12-8-2009 23:48:28,"092,1"
12-8-2009 23:48:55,"092,3"
12-8-2009 23:57:46,"092,4"
12-8-2009 23:58:14,"092,0"
12-8-2009 23:58:40,"092,0"
12-8-2009 23:59:05,"092,0"
12-8-2009 23:59:44,"094,0"
13-8-2009 07:15:57,"091,5"
13-8-2009 07:36:54,"091,5"
13-8-2009 07:37:44,"091,5"
13-8-2009 20:15:02,"092,0"
13-8-2009 20:15:28,"091,9"
13-8-2009 21:22:53,"091,6"
}}}

==Real Time Clock==
Since I want to also register the time date, I need to have a Real Time Clock(RTC). LPC2103 have one RTC and the board I am using, have the RTC working.

Since I need to setup the clock with correct time date and I do not want to add buttons to the system just for doing it. I implemented the following idea: Every time that system boots, if on root of SD Card there is a file called "time.txt", read the time data from it and setup the clock; finally, delete the file.
 
The time.txt file should have a string with the following format (without square brackets):
{{{
[year][month][month day][week day][hour][minutes][seconds]
Example: [2009][08][01][6][12][00][00]; string "200908016120000".
}}}

I am using 2 X AAA NiMh low discharge batteries to power the RTC, I hope it lasts at least 1 year.

===Schematic===
[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090817-power_rtc.jpg]

==Power down the system== 
After finish the prototype, I verified that the LPC2103 board + LCD module HD44780 were using about 140mA.

I worked to found a way to disable the circuit when the original scale circuits are not working. I verified that when original scale is off, there is no signals to the original LCD. I ended up by using a mosfet that is turned on when there a signal on the backplane 1 line.

I also control that mosfet with a signal from the LPC2103, so the system can keep with power turned on and shut off himself when desired.

===Schematic===
[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090817-power.jpg]

On the next image, we can see the signals before and after D1 BAS85. Yellow line is at point LCD_pin13 and blue at gate of Q1 BSS138.

[http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090818-power_module_oscilloscope_image.jpg]

==Pictures taken on 2009.08.14==
http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090814-sdcard_bathroom_scale-01.jpg

http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090814-sdcard_bathroom_scale-02.jpg

http://casainho-projects.googlecode.com/svn/trunk/sdcard_bathroom_scale/images/20090814-sdcard_bathroom_scale-03.jpg