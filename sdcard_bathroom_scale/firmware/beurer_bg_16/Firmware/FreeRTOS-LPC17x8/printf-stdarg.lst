ARM GAS  /tmp/ccEnCxJF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"printf-stdarg.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 B1010000 		.section	.debug_macinfo,"",%progbits
  20      0200AE00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ldebug_macinfo0:
  22              		.text
  23              	.Ltext0:
  24              		.file 1 "printf-stdarg.c"
  25              		.section	.debug_macinfo
  26 0000 03       		.byte	0x3
  27 0001 00       		.uleb128 0x0
  28 0002 01       		.uleb128 0x1
  29 0003 01       		.byte	0x1
  30 0004 00       		.uleb128 0x0
  31 0005 5F5F5354 		.ascii	"__STDC__ 1\000"
  31      44435F5F 
  31      203100
  32 0010 01       		.byte	0x1
  33 0011 00       		.uleb128 0x0
  34 0012 5F5F5354 		.ascii	"__STDC_VERSION__ 199901L\000"
  34      44435F56 
  34      45525349 
  34      4F4E5F5F 
  34      20313939 
  35 002b 01       		.byte	0x1
  36 002c 00       		.uleb128 0x0
  37 002d 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
  37      44435F48 
  37      4F535445 
  37      445F5F20 
  37      3100
  38 003f 01       		.byte	0x1
  39 0040 00       		.uleb128 0x0
  40 0041 5F5F474E 		.ascii	"__GNUC__ 4\000"
  40      55435F5F 
  40      203400
  41 004c 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 2


  42 004d 00       		.uleb128 0x0
  43 004e 5F5F474E 		.ascii	"__GNUC_MINOR__ 4\000"
  43      55435F4D 
  43      494E4F52 
  43      5F5F2034 
  43      00
  44 005f 01       		.byte	0x1
  45 0060 00       		.uleb128 0x0
  46 0061 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 1\000"
  46      55435F50 
  46      41544348 
  46      4C455645 
  46      4C5F5F20 
  47 0077 01       		.byte	0x1
  48 0078 00       		.uleb128 0x0
  49 0079 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
  49      5A455F54 
  49      5950455F 
  49      5F20756E 
  49      7369676E 
  50 0094 01       		.byte	0x1
  51 0095 00       		.uleb128 0x0
  52 0096 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
  52      52444946 
  52      465F5459 
  52      50455F5F 
  52      20696E74 
  53 00ab 01       		.byte	0x1
  54 00ac 00       		.uleb128 0x0
  55 00ad 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
  55      4841525F 
  55      54595045 
  55      5F5F2075 
  55      6E736967 
  56 00c9 01       		.byte	0x1
  57 00ca 00       		.uleb128 0x0
  58 00cb 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
  58      4E545F54 
  58      5950455F 
  58      5F20756E 
  58      7369676E 
  59 00e6 01       		.byte	0x1
  60 00e7 00       		.uleb128 0x0
  61 00e8 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
  61      544D4158 
  61      5F545950 
  61      455F5F20 
  61      6C6F6E67 
  62 0106 01       		.byte	0x1
  63 0107 00       		.uleb128 0x0
  64 0108 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
  64      4E544D41 
  64      585F5459 
  64      50455F5F 
  64      206C6F6E 
  65 0130 01       		.byte	0x1
  66 0131 00       		.uleb128 0x0
ARM GAS  /tmp/ccEnCxJF.s 			page 3


  67 0132 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
  67      41523136 
  67      5F545950 
  67      455F5F20 
  67      73686F72 
  68 0155 01       		.byte	0x1
  69 0156 00       		.uleb128 0x0
  70 0157 5F5F4348 		.ascii	"__CHAR32_TYPE__ unsigned int\000"
  70      41523332 
  70      5F545950 
  70      455F5F20 
  70      756E7369 
  71 0174 01       		.byte	0x1
  72 0175 00       		.uleb128 0x0
  73 0176 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1002\000"
  73      585F4142 
  73      495F5645 
  73      5253494F 
  73      4E203130 
  74 018d 01       		.byte	0x1
  75 018e 00       		.uleb128 0x0
  76 018f 5F5F5343 		.ascii	"__SCHAR_MAX__ 127\000"
  76      4841525F 
  76      4D41585F 
  76      5F203132 
  76      3700
  77 01a1 01       		.byte	0x1
  78 01a2 00       		.uleb128 0x0
  79 01a3 5F5F5348 		.ascii	"__SHRT_MAX__ 32767\000"
  79      52545F4D 
  79      41585F5F 
  79      20333237 
  79      363700
  80 01b6 01       		.byte	0x1
  81 01b7 00       		.uleb128 0x0
  82 01b8 5F5F494E 		.ascii	"__INT_MAX__ 2147483647\000"
  82      545F4D41 
  82      585F5F20 
  82      32313437 
  82      34383336 
  83 01cf 01       		.byte	0x1
  84 01d0 00       		.uleb128 0x0
  85 01d1 5F5F4C4F 		.ascii	"__LONG_MAX__ 2147483647L\000"
  85      4E475F4D 
  85      41585F5F 
  85      20323134 
  85      37343833 
  86 01ea 01       		.byte	0x1
  87 01eb 00       		.uleb128 0x0
  88 01ec 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 9223372036854775807LL\000"
  88      4E475F4C 
  88      4F4E475F 
  88      4D41585F 
  88      5F203932 
  89 0214 01       		.byte	0x1
  90 0215 00       		.uleb128 0x0
  91 0216 5F5F5743 		.ascii	"__WCHAR_MAX__ 4294967295U\000"
ARM GAS  /tmp/ccEnCxJF.s 			page 4


  91      4841525F 
  91      4D41585F 
  91      5F203432 
  91      39343936 
  92 0230 01       		.byte	0x1
  93 0231 00       		.uleb128 0x0
  94 0232 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
  94      41525F42 
  94      49545F5F 
  94      203800
  95 0241 01       		.byte	0x1
  96 0242 00       		.uleb128 0x0
  97 0243 5F5F494E 		.ascii	"__INTMAX_MAX__ 9223372036854775807LL\000"
  97      544D4158 
  97      5F4D4158 
  97      5F5F2039 
  97      32323333 
  98 0268 01       		.byte	0x1
  99 0269 00       		.uleb128 0x0
 100 026a 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 100      545F4556 
 100      414C5F4D 
 100      4554484F 
 100      445F5F20 
 101 0280 01       		.byte	0x1
 102 0281 00       		.uleb128 0x0
 103 0282 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 103      435F4556 
 103      414C5F4D 
 103      4554484F 
 103      445F5F20 
 104 0298 01       		.byte	0x1
 105 0299 00       		.uleb128 0x0
 106 029a 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 106      545F5241 
 106      4449585F 
 106      5F203200 
 107 02aa 01       		.byte	0x1
 108 02ab 00       		.uleb128 0x0
 109 02ac 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 109      545F4D41 
 109      4E545F44 
 109      49475F5F 
 109      20323400 
 110 02c0 01       		.byte	0x1
 111 02c1 00       		.uleb128 0x0
 112 02c2 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 112      545F4449 
 112      475F5F20 
 112      3600
 113 02d0 01       		.byte	0x1
 114 02d1 00       		.uleb128 0x0
 115 02d2 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 115      545F4D49 
 115      4E5F4558 
 115      505F5F20 
 115      282D3132 
ARM GAS  /tmp/ccEnCxJF.s 			page 5


 116 02e9 01       		.byte	0x1
 117 02ea 00       		.uleb128 0x0
 118 02eb 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 118      545F4D49 
 118      4E5F3130 
 118      5F455850 
 118      5F5F2028 
 119 0304 01       		.byte	0x1
 120 0305 00       		.uleb128 0x0
 121 0306 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 121      545F4D41 
 121      585F4558 
 121      505F5F20 
 121      31323800 
 122 031a 01       		.byte	0x1
 123 031b 00       		.uleb128 0x0
 124 031c 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 124      545F4D41 
 124      585F3130 
 124      5F455850 
 124      5F5F2033 
 125 0332 01       		.byte	0x1
 126 0333 00       		.uleb128 0x0
 127 0334 5F5F464C 		.ascii	"__FLT_MAX__ 3.40282347e+38F\000"
 127      545F4D41 
 127      585F5F20 
 127      332E3430 
 127      32383233 
 128 0350 01       		.byte	0x1
 129 0351 00       		.uleb128 0x0
 130 0352 5F5F464C 		.ascii	"__FLT_MIN__ 1.17549435e-38F\000"
 130      545F4D49 
 130      4E5F5F20 
 130      312E3137 
 130      35343934 
 131 036e 01       		.byte	0x1
 132 036f 00       		.uleb128 0x0
 133 0370 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.19209290e-7F\000"
 133      545F4550 
 133      53494C4F 
 133      4E5F5F20 
 133      312E3139 
 134 038f 01       		.byte	0x1
 135 0390 00       		.uleb128 0x0
 136 0391 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.40129846e-45F\000"
 136      545F4445 
 136      4E4F524D 
 136      5F4D494E 
 136      5F5F2031 
 137 03b4 01       		.byte	0x1
 138 03b5 00       		.uleb128 0x0
 139 03b6 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 139      545F4841 
 139      535F4445 
 139      4E4F524D 
 139      5F5F2031 
 140 03cb 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 6


 141 03cc 00       		.uleb128 0x0
 142 03cd 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 142      545F4841 
 142      535F494E 
 142      46494E49 
 142      54595F5F 
 143 03e4 01       		.byte	0x1
 144 03e5 00       		.uleb128 0x0
 145 03e6 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 145      545F4841 
 145      535F5155 
 145      4945545F 
 145      4E414E5F 
 146 03fe 01       		.byte	0x1
 147 03ff 00       		.uleb128 0x0
 148 0400 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 148      4C5F4D41 
 148      4E545F44 
 148      49475F5F 
 148      20353300 
 149 0414 01       		.byte	0x1
 150 0415 00       		.uleb128 0x0
 151 0416 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 151      4C5F4449 
 151      475F5F20 
 151      313500
 152 0425 01       		.byte	0x1
 153 0426 00       		.uleb128 0x0
 154 0427 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 154      4C5F4D49 
 154      4E5F4558 
 154      505F5F20 
 154      282D3130 
 155 043f 01       		.byte	0x1
 156 0440 00       		.uleb128 0x0
 157 0441 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 157      4C5F4D49 
 157      4E5F3130 
 157      5F455850 
 157      5F5F2028 
 158 045b 01       		.byte	0x1
 159 045c 00       		.uleb128 0x0
 160 045d 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 160      4C5F4D41 
 160      585F4558 
 160      505F5F20 
 160      31303234 
 161 0472 01       		.byte	0x1
 162 0473 00       		.uleb128 0x0
 163 0474 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 163      4C5F4D41 
 163      585F3130 
 163      5F455850 
 163      5F5F2033 
 164 048b 01       		.byte	0x1
 165 048c 00       		.uleb128 0x0
 166 048d 5F5F4442 		.ascii	"__DBL_MAX__ 1.7976931348623157e+308\000"
ARM GAS  /tmp/ccEnCxJF.s 			page 7


 166      4C5F4D41 
 166      585F5F20 
 166      312E3739 
 166      37363933 
 167 04b1 01       		.byte	0x1
 168 04b2 00       		.uleb128 0x0
 169 04b3 5F5F4442 		.ascii	"__DBL_MIN__ 2.2250738585072014e-308\000"
 169      4C5F4D49 
 169      4E5F5F20 
 169      322E3232 
 169      35303733 
 170 04d7 01       		.byte	0x1
 171 04d8 00       		.uleb128 0x0
 172 04d9 5F5F4442 		.ascii	"__DBL_EPSILON__ 2.2204460492503131e-16\000"
 172      4C5F4550 
 172      53494C4F 
 172      4E5F5F20 
 172      322E3232 
 173 0500 01       		.byte	0x1
 174 0501 00       		.uleb128 0x0
 175 0502 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ 4.9406564584124654e-324\000"
 175      4C5F4445 
 175      4E4F524D 
 175      5F4D494E 
 175      5F5F2034 
 176 052d 01       		.byte	0x1
 177 052e 00       		.uleb128 0x0
 178 052f 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 178      4C5F4841 
 178      535F4445 
 178      4E4F524D 
 178      5F5F2031 
 179 0544 01       		.byte	0x1
 180 0545 00       		.uleb128 0x0
 181 0546 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 181      4C5F4841 
 181      535F494E 
 181      46494E49 
 181      54595F5F 
 182 055d 01       		.byte	0x1
 183 055e 00       		.uleb128 0x0
 184 055f 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 184      4C5F4841 
 184      535F5155 
 184      4945545F 
 184      4E414E5F 
 185 0577 01       		.byte	0x1
 186 0578 00       		.uleb128 0x0
 187 0579 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 187      424C5F4D 
 187      414E545F 
 187      4449475F 
 187      5F203533 
 188 058e 01       		.byte	0x1
 189 058f 00       		.uleb128 0x0
 190 0590 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 190      424C5F44 
ARM GAS  /tmp/ccEnCxJF.s 			page 8


 190      49475F5F 
 190      20313500 
 191 05a0 01       		.byte	0x1
 192 05a1 00       		.uleb128 0x0
 193 05a2 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 193      424C5F4D 
 193      494E5F45 
 193      58505F5F 
 193      20282D31 
 194 05bb 01       		.byte	0x1
 195 05bc 00       		.uleb128 0x0
 196 05bd 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 196      424C5F4D 
 196      494E5F31 
 196      305F4558 
 196      505F5F20 
 197 05d8 01       		.byte	0x1
 198 05d9 00       		.uleb128 0x0
 199 05da 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 199      424C5F4D 
 199      41585F45 
 199      58505F5F 
 199      20313032 
 200 05f0 01       		.byte	0x1
 201 05f1 00       		.uleb128 0x0
 202 05f2 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 202      424C5F4D 
 202      41585F31 
 202      305F4558 
 202      505F5F20 
 203 060a 01       		.byte	0x1
 204 060b 00       		.uleb128 0x0
 205 060c 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
 205      43494D41 
 205      4C5F4449 
 205      475F5F20 
 205      313700
 206 061f 01       		.byte	0x1
 207 0620 00       		.uleb128 0x0
 208 0621 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 208      424C5F4D 
 208      41585F5F 
 208      20312E37 
 208      39373639 
 209 0647 01       		.byte	0x1
 210 0648 00       		.uleb128 0x0
 211 0649 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 211      424C5F4D 
 211      494E5F5F 
 211      20322E32 
 211      32353037 
 212 066f 01       		.byte	0x1
 213 0670 00       		.uleb128 0x0
 214 0671 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 214      424C5F45 
 214      5053494C 
 214      4F4E5F5F 
ARM GAS  /tmp/ccEnCxJF.s 			page 9


 214      20322E32 
 215 069a 01       		.byte	0x1
 216 069b 00       		.uleb128 0x0
 217 069c 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 217      424C5F44 
 217      454E4F52 
 217      4D5F4D49 
 217      4E5F5F20 
 218 06c9 01       		.byte	0x1
 219 06ca 00       		.uleb128 0x0
 220 06cb 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 220      424C5F48 
 220      41535F44 
 220      454E4F52 
 220      4D5F5F20 
 221 06e1 01       		.byte	0x1
 222 06e2 00       		.uleb128 0x0
 223 06e3 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 223      424C5F48 
 223      41535F49 
 223      4E46494E 
 223      4954595F 
 224 06fb 01       		.byte	0x1
 225 06fc 00       		.uleb128 0x0
 226 06fd 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 226      424C5F48 
 226      41535F51 
 226      55494554 
 226      5F4E414E 
 227 0716 01       		.byte	0x1
 228 0717 00       		.uleb128 0x0
 229 0718 5F5F4445 		.ascii	"__DEC32_MANT_DIG__ 7\000"
 229      4333325F 
 229      4D414E54 
 229      5F444947 
 229      5F5F2037 
 230 072d 01       		.byte	0x1
 231 072e 00       		.uleb128 0x0
 232 072f 5F5F4445 		.ascii	"__DEC32_MIN_EXP__ (-94)\000"
 232      4333325F 
 232      4D494E5F 
 232      4558505F 
 232      5F20282D 
 233 0747 01       		.byte	0x1
 234 0748 00       		.uleb128 0x0
 235 0749 5F5F4445 		.ascii	"__DEC32_MAX_EXP__ 97\000"
 235      4333325F 
 235      4D41585F 
 235      4558505F 
 235      5F203937 
 236 075e 01       		.byte	0x1
 237 075f 00       		.uleb128 0x0
 238 0760 5F5F4445 		.ascii	"__DEC32_MIN__ 1E-95DF\000"
 238      4333325F 
 238      4D494E5F 
 238      5F203145 
 238      2D393544 
ARM GAS  /tmp/ccEnCxJF.s 			page 10


 239 0776 01       		.byte	0x1
 240 0777 00       		.uleb128 0x0
 241 0778 5F5F4445 		.ascii	"__DEC32_MAX__ 9.999999E96DF\000"
 241      4333325F 
 241      4D41585F 
 241      5F20392E 
 241      39393939 
 242 0794 01       		.byte	0x1
 243 0795 00       		.uleb128 0x0
 244 0796 5F5F4445 		.ascii	"__DEC32_EPSILON__ 1E-6DF\000"
 244      4333325F 
 244      45505349 
 244      4C4F4E5F 
 244      5F203145 
 245 07af 01       		.byte	0x1
 246 07b0 00       		.uleb128 0x0
 247 07b1 5F5F4445 		.ascii	"__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\000"
 247      4333325F 
 247      5355424E 
 247      4F524D41 
 247      4C5F4D49 
 248 07d8 01       		.byte	0x1
 249 07d9 00       		.uleb128 0x0
 250 07da 5F5F4445 		.ascii	"__DEC64_MANT_DIG__ 16\000"
 250      4336345F 
 250      4D414E54 
 250      5F444947 
 250      5F5F2031 
 251 07f0 01       		.byte	0x1
 252 07f1 00       		.uleb128 0x0
 253 07f2 5F5F4445 		.ascii	"__DEC64_MIN_EXP__ (-382)\000"
 253      4336345F 
 253      4D494E5F 
 253      4558505F 
 253      5F20282D 
 254 080b 01       		.byte	0x1
 255 080c 00       		.uleb128 0x0
 256 080d 5F5F4445 		.ascii	"__DEC64_MAX_EXP__ 385\000"
 256      4336345F 
 256      4D41585F 
 256      4558505F 
 256      5F203338 
 257 0823 01       		.byte	0x1
 258 0824 00       		.uleb128 0x0
 259 0825 5F5F4445 		.ascii	"__DEC64_MIN__ 1E-383DD\000"
 259      4336345F 
 259      4D494E5F 
 259      5F203145 
 259      2D333833 
 260 083c 01       		.byte	0x1
 261 083d 00       		.uleb128 0x0
 262 083e 5F5F4445 		.ascii	"__DEC64_MAX__ 9.999999999999999E384DD\000"
 262      4336345F 
 262      4D41585F 
 262      5F20392E 
 262      39393939 
 263 0864 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 11


 264 0865 00       		.uleb128 0x0
 265 0866 5F5F4445 		.ascii	"__DEC64_EPSILON__ 1E-15DD\000"
 265      4336345F 
 265      45505349 
 265      4C4F4E5F 
 265      5F203145 
 266 0880 01       		.byte	0x1
 267 0881 00       		.uleb128 0x0
 268 0882 5F5F4445 		.ascii	"__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\000"
 268      4336345F 
 268      5355424E 
 268      4F524D41 
 268      4C5F4D49 
 269 08b3 01       		.byte	0x1
 270 08b4 00       		.uleb128 0x0
 271 08b5 5F5F4445 		.ascii	"__DEC128_MANT_DIG__ 34\000"
 271      43313238 
 271      5F4D414E 
 271      545F4449 
 271      475F5F20 
 272 08cc 01       		.byte	0x1
 273 08cd 00       		.uleb128 0x0
 274 08ce 5F5F4445 		.ascii	"__DEC128_MIN_EXP__ (-6142)\000"
 274      43313238 
 274      5F4D494E 
 274      5F455850 
 274      5F5F2028 
 275 08e9 01       		.byte	0x1
 276 08ea 00       		.uleb128 0x0
 277 08eb 5F5F4445 		.ascii	"__DEC128_MAX_EXP__ 6145\000"
 277      43313238 
 277      5F4D4158 
 277      5F455850 
 277      5F5F2036 
 278 0903 01       		.byte	0x1
 279 0904 00       		.uleb128 0x0
 280 0905 5F5F4445 		.ascii	"__DEC128_MIN__ 1E-6143DL\000"
 280      43313238 
 280      5F4D494E 
 280      5F5F2031 
 280      452D3631 
 281 091e 01       		.byte	0x1
 282 091f 00       		.uleb128 0x0
 283 0920 5F5F4445 		.ascii	"__DEC128_MAX__ 9.999999999999999999999999999999999E"
 283      43313238 
 283      5F4D4158 
 283      5F5F2039 
 283      2E393939 
 284 0953 36313434 		.ascii	"6144DL\000"
 284      444C00
 285 095a 01       		.byte	0x1
 286 095b 00       		.uleb128 0x0
 287 095c 5F5F4445 		.ascii	"__DEC128_EPSILON__ 1E-33DL\000"
 287      43313238 
 287      5F455053 
 287      494C4F4E 
 287      5F5F2031 
ARM GAS  /tmp/ccEnCxJF.s 			page 12


 288 0977 01       		.byte	0x1
 289 0978 00       		.uleb128 0x0
 290 0979 5F5F4445 		.ascii	"__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000"
 290      43313238 
 290      5F535542 
 290      4E4F524D 
 290      414C5F4D 
 291 09ac 30303030 		.ascii	"000000001E-6143DL\000"
 291      30303030 
 291      31452D36 
 291      31343344 
 291      4C00
 292 09be 01       		.byte	0x1
 293 09bf 00       		.uleb128 0x0
 294 09c0 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
 294      47495354 
 294      45525F50 
 294      52454649 
 294      585F5F20 
 295 09d5 01       		.byte	0x1
 296 09d6 00       		.uleb128 0x0
 297 09d7 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 297      45525F4C 
 297      4142454C 
 297      5F505245 
 297      4649585F 
 298 09ee 01       		.byte	0x1
 299 09ef 00       		.uleb128 0x0
 300 09f0 5F5F5645 		.ascii	"__VERSION__ \"4.4.1\"\000"
 300      5253494F 
 300      4E5F5F20 
 300      22342E34 
 300      2E312200 
 301 0a04 01       		.byte	0x1
 302 0a05 00       		.uleb128 0x0
 303 0a06 5F5F474E 		.ascii	"__GNUC_STDC_INLINE__ 1\000"
 303      55435F53 
 303      5444435F 
 303      494E4C49 
 303      4E455F5F 
 304 0a1d 01       		.byte	0x1
 305 0a1e 00       		.uleb128 0x0
 306 0a1f 5F5F4E4F 		.ascii	"__NO_INLINE__ 1\000"
 306      5F494E4C 
 306      494E455F 
 306      5F203100 
 307 0a2f 01       		.byte	0x1
 308 0a30 00       		.uleb128 0x0
 309 0a31 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 309      4E495445 
 309      5F4D4154 
 309      485F4F4E 
 309      4C595F5F 
 310 0a48 01       		.byte	0x1
 311 0a49 00       		.uleb128 0x0
 312 0a4a 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 312      41525F55 
ARM GAS  /tmp/ccEnCxJF.s 			page 13


 312      4E534947 
 312      4E45445F 
 312      5F203100 
 313 0a5e 01       		.byte	0x1
 314 0a5f 00       		.uleb128 0x0
 315 0a60 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 315      5A454F46 
 315      5F494E54 
 315      5F5F2034 
 315      00
 316 0a71 01       		.byte	0x1
 317 0a72 00       		.uleb128 0x0
 318 0a73 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 318      5A454F46 
 318      5F4C4F4E 
 318      475F5F20 
 318      3400
 319 0a85 01       		.byte	0x1
 320 0a86 00       		.uleb128 0x0
 321 0a87 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 321      5A454F46 
 321      5F4C4F4E 
 321      475F4C4F 
 321      4E475F5F 
 322 0a9e 01       		.byte	0x1
 323 0a9f 00       		.uleb128 0x0
 324 0aa0 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 324      5A454F46 
 324      5F53484F 
 324      52545F5F 
 324      203200
 325 0ab3 01       		.byte	0x1
 326 0ab4 00       		.uleb128 0x0
 327 0ab5 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 327      5A454F46 
 327      5F464C4F 
 327      41545F5F 
 327      203400
 328 0ac8 01       		.byte	0x1
 329 0ac9 00       		.uleb128 0x0
 330 0aca 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 330      5A454F46 
 330      5F444F55 
 330      424C455F 
 330      5F203800 
 331 0ade 01       		.byte	0x1
 332 0adf 00       		.uleb128 0x0
 333 0ae0 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
 333      5A454F46 
 333      5F4C4F4E 
 333      475F444F 
 333      55424C45 
 334 0af9 01       		.byte	0x1
 335 0afa 00       		.uleb128 0x0
 336 0afb 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 336      5A454F46 
 336      5F53495A 
ARM GAS  /tmp/ccEnCxJF.s 			page 14


 336      455F545F 
 336      5F203400 
 337 0b0f 01       		.byte	0x1
 338 0b10 00       		.uleb128 0x0
 339 0b11 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
 339      5A454F46 
 339      5F574348 
 339      41525F54 
 339      5F5F2034 
 340 0b26 01       		.byte	0x1
 341 0b27 00       		.uleb128 0x0
 342 0b28 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 342      5A454F46 
 342      5F57494E 
 342      545F545F 
 342      5F203400 
 343 0b3c 01       		.byte	0x1
 344 0b3d 00       		.uleb128 0x0
 345 0b3e 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 345      5A454F46 
 345      5F505452 
 345      44494646 
 345      5F545F5F 
 346 0b55 01       		.byte	0x1
 347 0b56 00       		.uleb128 0x0
 348 0b57 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
 348      5A454F46 
 348      5F504F49 
 348      4E544552 
 348      5F5F2034 
 349 0b6c 01       		.byte	0x1
 350 0b6d 00       		.uleb128 0x0
 351 0b6e 5F5F6172 		.ascii	"__arm__ 1\000"
 351      6D5F5F20 
 351      3100
 352 0b78 01       		.byte	0x1
 353 0b79 00       		.uleb128 0x0
 354 0b7a 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 354      43535F33 
 354      325F5F20 
 354      3100
 355 0b88 01       		.byte	0x1
 356 0b89 00       		.uleb128 0x0
 357 0b8a 5F5F7468 		.ascii	"__thumb__ 1\000"
 357      756D625F 
 357      5F203100 
 358 0b96 01       		.byte	0x1
 359 0b97 00       		.uleb128 0x0
 360 0b98 5F5F7468 		.ascii	"__thumb2__ 1\000"
 360      756D6232 
 360      5F5F2031 
 360      00
 361 0ba5 01       		.byte	0x1
 362 0ba6 00       		.uleb128 0x0
 363 0ba7 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 363      4D454C5F 
 363      5F203100 
ARM GAS  /tmp/ccEnCxJF.s 			page 15


 364 0bb3 01       		.byte	0x1
 365 0bb4 00       		.uleb128 0x0
 366 0bb5 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 366      554D4245 
 366      4C5F5F20 
 366      3100
 367 0bc3 01       		.byte	0x1
 368 0bc4 00       		.uleb128 0x0
 369 0bc5 5F5F534F 		.ascii	"__SOFTFP__ 1\000"
 369      46544650 
 369      5F5F2031 
 369      00
 370 0bd2 01       		.byte	0x1
 371 0bd3 00       		.uleb128 0x0
 372 0bd4 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
 372      505F4650 
 372      5F5F2031 
 372      00
 373 0be1 01       		.byte	0x1
 374 0be2 00       		.uleb128 0x0
 375 0be3 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 375      554D425F 
 375      494E5445 
 375      52574F52 
 375      4B5F5F20 
 376 0bf9 01       		.byte	0x1
 377 0bfa 00       		.uleb128 0x0
 378 0bfb 5F5F4152 		.ascii	"__ARM_ARCH_7M__ 1\000"
 378      4D5F4152 
 378      43485F37 
 378      4D5F5F20 
 378      3100
 379 0c0d 01       		.byte	0x1
 380 0c0e 00       		.uleb128 0x0
 381 0c0f 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
 381      4D5F4541 
 381      42495F5F 
 381      203100
 382 0c1e 01       		.byte	0x1
 383 0c1f 00       		.uleb128 0x0
 384 0c20 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 384      585F5459 
 384      5045494E 
 384      464F5F45 
 384      5155414C 
 385 0c41 01       		.byte	0x1
 386 0c42 00       		.uleb128 0x0
 387 0c43 5F5F454C 		.ascii	"__ELF__ 1\000"
 387      465F5F20 
 387      3100
 388 0c4d 01       		.byte	0x1
 389 0c4e 00       		.uleb128 0x0
 390 0c4f 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
 390      47474553 
 390      545F414C 
 390      49474E4D 
 390      454E545F 
ARM GAS  /tmp/ccEnCxJF.s 			page 16


 391 0c67 01       		.byte	0x1
 392 0c68 00       		.uleb128 0x0
 393 0c69 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 393      45535F49 
 393      4E495446 
 393      494E495F 
 393      5F203100 
 394 0c7d 01       		.byte	0x1
 395 0c7e 00       		.uleb128 0x0
 396 0c7f 465F4350 		.ascii	"F_CPU 12000000UL\000"
 396      55203132 
 396      30303030 
 396      3030554C 
 396      00
 397 0c90 01       		.byte	0x1
 398 0c91 00       		.uleb128 0x0
 399 0c92 465F434C 		.ascii	"F_CLOCK 12000000UL\000"
 399      4F434B20 
 399      31323030 
 399      30303030 
 399      554C00
 400 0ca5 01       		.byte	0x1
 401 0ca6 00       		.uleb128 0x0
 402 0ca7 424F4152 		.ascii	"BOARD BOARD_\000"
 402      4420424F 
 402      4152445F 
 402      00
 403 0cb4 01       		.byte	0x1
 404 0cb5 00       		.uleb128 0x0
 405 0cb6 44454255 		.ascii	"DEBUG 1\000"
 405      47203100 
 406 0cbe 01       		.byte	0x1
 407 0cbf 00       		.uleb128 0x0
 408 0cc0 5041434B 		.ascii	"PACK_STRUCT_END __attribute((packed))\000"
 408      5F535452 
 408      5543545F 
 408      454E4420 
 408      5F5F6174 
 409 0ce6 01       		.byte	0x1
 410 0ce7 00       		.uleb128 0x0
 411 0ce8 414C4947 		.ascii	"ALIGN_STRUCT_END __attribute((aligned(4)))\000"
 411      4E5F5354 
 411      52554354 
 411      5F454E44 
 411      205F5F61 
 412 0d13 01       		.byte	0x1
 413 0d14 00       		.uleb128 0x0
 414 0d15 5F4C5043 		.ascii	"_LPC1758_ 1\000"
 414      31373538 
 414      5F203100 
 415 0d21 01       		.byte	0x1
 416 0d22 1C       		.uleb128 0x1c
 417 0d23 70757463 		.ascii	"putchar(c) c\000"
 417      68617228 
 417      63292063 
 417      00
 418              		.file 2 "/home/cas/Documentos/06_software/arm_toolchain/codesourcery_arm_toolchain-2009q3/bin/../l
ARM GAS  /tmp/ccEnCxJF.s 			page 17


 419 0d30 03       		.byte	0x3
 420 0d31 1E       		.uleb128 0x1e
 421 0d32 02       		.uleb128 0x2
 422 0d33 01       		.byte	0x1
 423 0d34 1F       		.uleb128 0x1f
 424 0d35 5F535444 		.ascii	"_STDARG_H \000"
 424      4152475F 
 424      482000
 425 0d40 01       		.byte	0x1
 426 0d41 20       		.uleb128 0x20
 427 0d42 5F414E53 		.ascii	"_ANSI_STDARG_H_ \000"
 427      495F5354 
 427      44415247 
 427      5F485F20 
 427      00
 428 0d53 02       		.byte	0x2
 429 0d54 22       		.uleb128 0x22
 430 0d55 5F5F6E65 		.ascii	"__need___va_list\000"
 430      65645F5F 
 430      5F76615F 
 430      6C697374 
 430      00
 431 0d66 01       		.byte	0x1
 432 0d67 27       		.uleb128 0x27
 433 0d68 5F5F474E 		.ascii	"__GNUC_VA_LIST \000"
 433      55435F56 
 433      415F4C49 
 433      53542000 
 434 0d78 01       		.byte	0x1
 435 0d79 2F       		.uleb128 0x2f
 436 0d7a 76615F73 		.ascii	"va_start(v,l) __builtin_va_start(v,l)\000"
 436      74617274 
 436      28762C6C 
 436      29205F5F 
 436      6275696C 
 437 0da0 01       		.byte	0x1
 438 0da1 30       		.uleb128 0x30
 439 0da2 76615F65 		.ascii	"va_end(v) __builtin_va_end(v)\000"
 439      6E642876 
 439      29205F5F 
 439      6275696C 
 439      74696E5F 
 440 0dc0 01       		.byte	0x1
 441 0dc1 31       		.uleb128 0x31
 442 0dc2 76615F61 		.ascii	"va_arg(v,l) __builtin_va_arg(v,l)\000"
 442      72672876 
 442      2C6C2920 
 442      5F5F6275 
 442      696C7469 
 443 0de4 01       		.byte	0x1
 444 0de5 33       		.uleb128 0x33
 445 0de6 76615F63 		.ascii	"va_copy(d,s) __builtin_va_copy(d,s)\000"
 445      6F707928 
 445      642C7329 
 445      205F5F62 
 445      75696C74 
 446 0e0a 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 18


 447 0e0b 35       		.uleb128 0x35
 448 0e0c 5F5F7661 		.ascii	"__va_copy(d,s) __builtin_va_copy(d,s)\000"
 448      5F636F70 
 448      7928642C 
 448      7329205F 
 448      5F627569 
 449 0e32 01       		.byte	0x1
 450 0e33 6C       		.uleb128 0x6c
 451 0e34 5F56415F 		.ascii	"_VA_LIST_ \000"
 451      4C495354 
 451      5F2000
 452 0e3f 01       		.byte	0x1
 453 0e40 6F       		.uleb128 0x6f
 454 0e41 5F56415F 		.ascii	"_VA_LIST \000"
 454      4C495354 
 454      2000
 455 0e4b 01       		.byte	0x1
 456 0e4c 72       		.uleb128 0x72
 457 0e4d 5F56415F 		.ascii	"_VA_LIST_DEFINED \000"
 457      4C495354 
 457      5F444546 
 457      494E4544 
 457      2000
 458 0e5f 01       		.byte	0x1
 459 0e60 75       		.uleb128 0x75
 460 0e61 5F56415F 		.ascii	"_VA_LIST_T_H \000"
 460      4C495354 
 460      5F545F48 
 460      2000
 461 0e6f 01       		.byte	0x1
 462 0e70 78       		.uleb128 0x78
 463 0e71 5F5F7661 		.ascii	"__va_list__ \000"
 463      5F6C6973 
 463      745F5F20 
 463      00
 464 0e7e 04       		.byte	0x4
 465 0e7f 01       		.byte	0x1
 466 0e80 2E       		.uleb128 0x2e
 467 0e81 5041445F 		.ascii	"PAD_RIGHT 1\000"
 467      52494748 
 467      54203100 
 468 0e8d 01       		.byte	0x1
 469 0e8e 2F       		.uleb128 0x2f
 470 0e8f 5041445F 		.ascii	"PAD_ZERO 2\000"
 470      5A45524F 
 470      203200
 471 0e9a 01       		.byte	0x1
 472 0e9b 50       		.uleb128 0x50
 473 0e9c 5052494E 		.ascii	"PRINT_BUF_LEN 12\000"
 473      545F4255 
 473      465F4C45 
 473      4E203132 
 473      00
 474 0ead 04       		.byte	0x4
 475              		.section	.text.printchar,"ax",%progbits
 476              		.align	2
 477              		.thumb
ARM GAS  /tmp/ccEnCxJF.s 			page 19


 478              		.thumb_func
 479              		.type	printchar, %function
 480              	printchar:
 481              	.LFB0:
   1:printf-stdarg.c **** /*
   2:printf-stdarg.c **** 	Copyright 2001, 2002 Georges Menie (www.menie.org)
   3:printf-stdarg.c **** 	stdarg version contributed by Christian Ettinger
   4:printf-stdarg.c **** 
   5:printf-stdarg.c ****     This program is free software; you can redistribute it and/or modify
   6:printf-stdarg.c ****     it under the terms of the GNU Lesser General Public License as published by
   7:printf-stdarg.c ****     the Free Software Foundation; either version 2 of the License, or
   8:printf-stdarg.c ****     (at your option) any later version.
   9:printf-stdarg.c **** 
  10:printf-stdarg.c ****     This program is distributed in the hope that it will be useful,
  11:printf-stdarg.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:printf-stdarg.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:printf-stdarg.c ****     GNU Lesser General Public License for more details.
  14:printf-stdarg.c **** 
  15:printf-stdarg.c ****     You should have received a copy of the GNU Lesser General Public License
  16:printf-stdarg.c ****     along with this program; if not, write to the Free Software
  17:printf-stdarg.c ****     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  18:printf-stdarg.c **** */
  19:printf-stdarg.c **** 
  20:printf-stdarg.c **** /*
  21:printf-stdarg.c **** 	putchar is the only external dependency for this file,
  22:printf-stdarg.c **** 	if you have a working putchar, leave it commented out.
  23:printf-stdarg.c **** 	If not, uncomment the define below and
  24:printf-stdarg.c **** 	replace outbyte(c) by your own function call.
  25:printf-stdarg.c **** 
  26:printf-stdarg.c **** */
  27:printf-stdarg.c **** 
  28:printf-stdarg.c **** #define putchar(c) c
  29:printf-stdarg.c **** 
  30:printf-stdarg.c **** #include <stdarg.h>
  31:printf-stdarg.c **** 
  32:printf-stdarg.c **** static void printchar(char **str, int c)
  33:printf-stdarg.c **** {
 482              		.loc 1 33 0
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              	.LCFI0:
 488 0002 83B0     		sub	sp, sp, #12
 489              	.LCFI1:
 490 0004 00AF     		add	r7, sp, #0
 491              	.LCFI2:
 492 0006 7860     		str	r0, [r7, #4]
 493 0008 3960     		str	r1, [r7, #0]
  34:printf-stdarg.c **** 	//extern int putchar(int c);
  35:printf-stdarg.c **** 	
  36:printf-stdarg.c **** 	if (str) {
 494              		.loc 1 36 0
 495 000a 7B68     		ldr	r3, [r7, #4]
 496 000c 002B     		cmp	r3, #0
 497 000e 0AD0     		beq	.L3
  37:printf-stdarg.c **** 		**str = (char)c;
ARM GAS  /tmp/ccEnCxJF.s 			page 20


 498              		.loc 1 37 0
 499 0010 7B68     		ldr	r3, [r7, #4]
 500 0012 1B68     		ldr	r3, [r3, #0]
 501 0014 3A68     		ldr	r2, [r7, #0]
 502 0016 D2B2     		uxtb	r2, r2
 503 0018 1A70     		strb	r2, [r3, #0]
  38:printf-stdarg.c **** 		++(*str);
 504              		.loc 1 38 0
 505 001a 7B68     		ldr	r3, [r7, #4]
 506 001c 1B68     		ldr	r3, [r3, #0]
 507 001e 03F10102 		add	r2, r3, #1
 508 0022 7B68     		ldr	r3, [r7, #4]
 509 0024 1A60     		str	r2, [r3, #0]
 510              	.L3:
  39:printf-stdarg.c **** 	}
  40:printf-stdarg.c **** 	else
  41:printf-stdarg.c **** 	{ 
  42:printf-stdarg.c **** 		(void)putchar(c);
  43:printf-stdarg.c **** 	}
  44:printf-stdarg.c **** }
 511              		.loc 1 44 0
 512 0026 07F10C07 		add	r7, r7, #12
 513 002a BD46     		mov	sp, r7
 514 002c 80BC     		pop	{r7}
 515 002e 7047     		bx	lr
 516              	.LFE0:
 517              		.size	printchar, .-printchar
 518              		.section	.text.prints,"ax",%progbits
 519              		.align	2
 520              		.thumb
 521              		.thumb_func
 522              		.type	prints, %function
 523              	prints:
 524              	.LFB1:
  45:printf-stdarg.c **** 
  46:printf-stdarg.c **** #define PAD_RIGHT 1
  47:printf-stdarg.c **** #define PAD_ZERO 2
  48:printf-stdarg.c **** 
  49:printf-stdarg.c **** static int prints(char **out, const char *string, int width, int pad)
  50:printf-stdarg.c **** {
 525              		.loc 1 50 0
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 529              	.LCFI3:
 530 0004 84B0     		sub	sp, sp, #16
 531              	.LCFI4:
 532 0006 00AF     		add	r7, sp, #0
 533              	.LCFI5:
 534 0008 F860     		str	r0, [r7, #12]
 535 000a B960     		str	r1, [r7, #8]
 536 000c 7A60     		str	r2, [r7, #4]
 537 000e 3B60     		str	r3, [r7, #0]
  51:printf-stdarg.c **** 	register int pc = 0, padchar = ' ';
 538              		.loc 1 51 0
 539 0010 4FF00004 		mov	r4, #0
 540 0014 4FF02006 		mov	r6, #32
ARM GAS  /tmp/ccEnCxJF.s 			page 21


  52:printf-stdarg.c **** 
  53:printf-stdarg.c **** 	if (width > 0) {
 541              		.loc 1 53 0
 542 0018 7B68     		ldr	r3, [r7, #4]
 543 001a 002B     		cmp	r3, #0
 544 001c 1EDD     		ble	.L5
 545              	.LBB2:
  54:printf-stdarg.c **** 		register int len = 0;
 546              		.loc 1 54 0
 547 001e 4FF00005 		mov	r5, #0
  55:printf-stdarg.c **** 		register const char *ptr;
  56:printf-stdarg.c **** 		for (ptr = string; *ptr; ++ptr) ++len;
 548              		.loc 1 56 0
 549 0022 D7F80880 		ldr	r8, [r7, #8]
 550 0026 03E0     		b	.L6
 551              	.L7:
 552 0028 05F10105 		add	r5, r5, #1
 553 002c 08F10108 		add	r8, r8, #1
 554              	.L6:
 555 0030 98F80030 		ldrb	r3, [r8, #0]	@ zero_extendqisi2
 556 0034 002B     		cmp	r3, #0
 557 0036 F7D1     		bne	.L7
  57:printf-stdarg.c **** 		if (len >= width) width = 0;
 558              		.loc 1 57 0
 559 0038 7B68     		ldr	r3, [r7, #4]
 560 003a 9D42     		cmp	r5, r3
 561 003c 03DB     		blt	.L8
 562 003e 4FF00003 		mov	r3, #0
 563 0042 7B60     		str	r3, [r7, #4]
 564 0044 03E0     		b	.L9
 565              	.L8:
  58:printf-stdarg.c **** 		else width -= len;
 566              		.loc 1 58 0
 567 0046 7B68     		ldr	r3, [r7, #4]
 568 0048 C5EB0303 		rsb	r3, r5, r3
 569 004c 7B60     		str	r3, [r7, #4]
 570              	.L9:
  59:printf-stdarg.c **** 		if (pad & PAD_ZERO) padchar = '0';
 571              		.loc 1 59 0
 572 004e 3B68     		ldr	r3, [r7, #0]
 573 0050 03F00203 		and	r3, r3, #2
 574 0054 002B     		cmp	r3, #0
 575 0056 01D0     		beq	.L5
 576 0058 4FF03006 		mov	r6, #48
 577              	.L5:
 578              	.LBE2:
  60:printf-stdarg.c **** 	}
  61:printf-stdarg.c **** 	if (!(pad & PAD_RIGHT)) {
 579              		.loc 1 61 0
 580 005c 3B68     		ldr	r3, [r7, #0]
 581 005e 03F00103 		and	r3, r3, #1
 582 0062 002B     		cmp	r3, #0
 583 0064 1BD1     		bne	.L18
  62:printf-stdarg.c **** 		for ( ; width > 0; --width) {
 584              		.loc 1 62 0
 585 0066 09E0     		b	.L11
 586              	.L12:
ARM GAS  /tmp/ccEnCxJF.s 			page 22


  63:printf-stdarg.c **** 			printchar (out, padchar);
 587              		.loc 1 63 0
 588 0068 F868     		ldr	r0, [r7, #12]
 589 006a 3146     		mov	r1, r6
 590 006c FFF7FEFF 		bl	printchar
  64:printf-stdarg.c **** 			++pc;
 591              		.loc 1 64 0
 592 0070 04F10104 		add	r4, r4, #1
 593              		.loc 1 62 0
 594 0074 7B68     		ldr	r3, [r7, #4]
 595 0076 03F1FF33 		add	r3, r3, #-1
 596 007a 7B60     		str	r3, [r7, #4]
 597              	.L11:
 598 007c 7B68     		ldr	r3, [r7, #4]
 599 007e 002B     		cmp	r3, #0
 600 0080 F2DC     		bgt	.L12
  65:printf-stdarg.c **** 		}
  66:printf-stdarg.c **** 	}
  67:printf-stdarg.c **** 	for ( ; *string ; ++string) {
 601              		.loc 1 67 0
 602 0082 0DE0     		b	.L13
 603              	.L14:
  68:printf-stdarg.c **** 		printchar (out, *string);
 604              		.loc 1 68 0
 605 0084 BB68     		ldr	r3, [r7, #8]
 606 0086 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 607 0088 F868     		ldr	r0, [r7, #12]
 608 008a 1946     		mov	r1, r3
 609 008c FFF7FEFF 		bl	printchar
  69:printf-stdarg.c **** 		++pc;
 610              		.loc 1 69 0
 611 0090 04F10104 		add	r4, r4, #1
 612              		.loc 1 67 0
 613 0094 BB68     		ldr	r3, [r7, #8]
 614 0096 03F10103 		add	r3, r3, #1
 615 009a BB60     		str	r3, [r7, #8]
 616 009c 00E0     		b	.L13
 617              	.L18:
 618 009e 00BF     		nop
 619              	.L13:
 620 00a0 BB68     		ldr	r3, [r7, #8]
 621 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 622 00a4 002B     		cmp	r3, #0
 623 00a6 EDD1     		bne	.L14
  70:printf-stdarg.c **** 	}
  71:printf-stdarg.c **** 	for ( ; width > 0; --width) {
 624              		.loc 1 71 0
 625 00a8 09E0     		b	.L15
 626              	.L16:
  72:printf-stdarg.c **** 		printchar (out, padchar);
 627              		.loc 1 72 0
 628 00aa F868     		ldr	r0, [r7, #12]
 629 00ac 3146     		mov	r1, r6
 630 00ae FFF7FEFF 		bl	printchar
  73:printf-stdarg.c **** 		++pc;
 631              		.loc 1 73 0
 632 00b2 04F10104 		add	r4, r4, #1
ARM GAS  /tmp/ccEnCxJF.s 			page 23


 633              		.loc 1 71 0
 634 00b6 7B68     		ldr	r3, [r7, #4]
 635 00b8 03F1FF33 		add	r3, r3, #-1
 636 00bc 7B60     		str	r3, [r7, #4]
 637              	.L15:
 638 00be 7B68     		ldr	r3, [r7, #4]
 639 00c0 002B     		cmp	r3, #0
 640 00c2 F2DC     		bgt	.L16
  74:printf-stdarg.c **** 	}
  75:printf-stdarg.c **** 
  76:printf-stdarg.c **** 	return pc;
 641              		.loc 1 76 0
 642 00c4 2346     		mov	r3, r4
  77:printf-stdarg.c **** }
 643              		.loc 1 77 0
 644 00c6 1846     		mov	r0, r3
 645 00c8 07F11007 		add	r7, r7, #16
 646 00cc BD46     		mov	sp, r7
 647 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 648              	.LFE1:
 649              		.size	prints, .-prints
 650 00d2 00BF     		.section	.text.printi,"ax",%progbits
 651              		.align	2
 652              		.thumb
 653              		.thumb_func
 654              		.type	printi, %function
 655              	printi:
 656              	.LFB2:
  78:printf-stdarg.c **** 
  79:printf-stdarg.c **** /* the following should be enough for 32 bit int */
  80:printf-stdarg.c **** #define PRINT_BUF_LEN 12
  81:printf-stdarg.c **** 
  82:printf-stdarg.c **** static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
  83:printf-stdarg.c **** {
 657              		.loc 1 83 0
 658              		@ args = 12, pretend = 0, frame = 32
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660 0000 2DE9F045 		push	{r4, r5, r6, r7, r8, sl, lr}
 661              	.LCFI6:
 662 0004 89B0     		sub	sp, sp, #36
 663              	.LCFI7:
 664 0006 00AF     		add	r7, sp, #0
 665              	.LCFI8:
 666 0008 F860     		str	r0, [r7, #12]
 667 000a B960     		str	r1, [r7, #8]
 668 000c 7A60     		str	r2, [r7, #4]
 669 000e 3B60     		str	r3, [r7, #0]
  84:printf-stdarg.c **** 	char print_buf[PRINT_BUF_LEN];
  85:printf-stdarg.c **** 	register char *s;
  86:printf-stdarg.c **** 	register int t, neg = 0, pc = 0;
 670              		.loc 1 86 0
 671 0010 4FF0000A 		mov	sl, #0
 672 0014 4FF00008 		mov	r8, #0
  87:printf-stdarg.c **** 	register unsigned int u = (unsigned int)i;
 673              		.loc 1 87 0
 674 0018 BD68     		ldr	r5, [r7, #8]
  88:printf-stdarg.c **** 
ARM GAS  /tmp/ccEnCxJF.s 			page 24


  89:printf-stdarg.c **** 	if (i == 0) {
 675              		.loc 1 89 0
 676 001a BB68     		ldr	r3, [r7, #8]
 677 001c 002B     		cmp	r3, #0
 678 001e 0FD1     		bne	.L20
  90:printf-stdarg.c **** 		print_buf[0] = '0';
 679              		.loc 1 90 0
 680 0020 4FF03003 		mov	r3, #48
 681 0024 3B75     		strb	r3, [r7, #20]
  91:printf-stdarg.c **** 		print_buf[1] = '\0';
 682              		.loc 1 91 0
 683 0026 4FF00003 		mov	r3, #0
 684 002a 7B75     		strb	r3, [r7, #21]
  92:printf-stdarg.c **** 		return prints (out, print_buf, width, pad);
 685              		.loc 1 92 0
 686 002c 07F11403 		add	r3, r7, #20
 687 0030 F868     		ldr	r0, [r7, #12]
 688 0032 1946     		mov	r1, r3
 689 0034 3A6C     		ldr	r2, [r7, #64]
 690 0036 7B6C     		ldr	r3, [r7, #68]
 691 0038 FFF7FEFF 		bl	prints
 692 003c 0346     		mov	r3, r0
 693 003e 54E0     		b	.L21
 694              	.L20:
  93:printf-stdarg.c **** 	}
  94:printf-stdarg.c **** 
  95:printf-stdarg.c **** 	if (sg && b == 10 && i < 0) {
 695              		.loc 1 95 0
 696 0040 3B68     		ldr	r3, [r7, #0]
 697 0042 002B     		cmp	r3, #0
 698 0044 0BD0     		beq	.L22
 699 0046 7B68     		ldr	r3, [r7, #4]
 700 0048 0A2B     		cmp	r3, #10
 701 004a 08D1     		bne	.L22
 702 004c BB68     		ldr	r3, [r7, #8]
 703 004e 002B     		cmp	r3, #0
 704 0050 05DA     		bge	.L22
  96:printf-stdarg.c **** 		neg = 1;
 705              		.loc 1 96 0
 706 0052 4FF0010A 		mov	sl, #1
  97:printf-stdarg.c **** 		u = (unsigned int)-i;
 707              		.loc 1 97 0
 708 0056 BB68     		ldr	r3, [r7, #8]
 709 0058 C3F10003 		rsb	r3, r3, #0
 710 005c 1D46     		mov	r5, r3
 711              	.L22:
  98:printf-stdarg.c **** 	}
  99:printf-stdarg.c **** 
 100:printf-stdarg.c **** 	s = print_buf + PRINT_BUF_LEN-1;
 712              		.loc 1 100 0
 713 005e 07F11403 		add	r3, r7, #20
 714 0062 03F10B04 		add	r4, r3, #11
 101:printf-stdarg.c **** 	*s = '\0';
 715              		.loc 1 101 0
 716 0066 4FF00003 		mov	r3, #0
 717 006a 2370     		strb	r3, [r4, #0]
 102:printf-stdarg.c **** 
ARM GAS  /tmp/ccEnCxJF.s 			page 25


 103:printf-stdarg.c **** 	while (u) {
 718              		.loc 1 103 0
 719 006c 17E0     		b	.L23
 720              	.L25:
 104:printf-stdarg.c **** 		t = (unsigned int)u % b;
 721              		.loc 1 104 0
 722 006e 7B68     		ldr	r3, [r7, #4]
 723 0070 B5FBF3F2 		udiv	r2, r5, r3
 724 0074 03FB02F3 		mul	r3, r3, r2
 725 0078 C3EB0503 		rsb	r3, r3, r5
 726 007c 1E46     		mov	r6, r3
 105:printf-stdarg.c **** 		if( t >= 10 )
 727              		.loc 1 105 0
 728 007e 092E     		cmp	r6, #9
 729 0080 03DD     		ble	.L24
 106:printf-stdarg.c **** 			t += letbase - '0' - 10;
 730              		.loc 1 106 0
 731 0082 BB6C     		ldr	r3, [r7, #72]
 732 0084 A3F13A03 		sub	r3, r3, #58
 733 0088 1E44     		add	r6, r6, r3
 734              	.L24:
 107:printf-stdarg.c **** 		*--s = (char)(t + '0');
 735              		.loc 1 107 0
 736 008a 04F1FF34 		add	r4, r4, #-1
 737 008e F3B2     		uxtb	r3, r6
 738 0090 03F13003 		add	r3, r3, #48
 739 0094 DBB2     		uxtb	r3, r3
 740 0096 2370     		strb	r3, [r4, #0]
 108:printf-stdarg.c **** 		u /= b;
 741              		.loc 1 108 0
 742 0098 7B68     		ldr	r3, [r7, #4]
 743 009a B5FBF3F5 		udiv	r5, r5, r3
 744              	.L23:
 745              		.loc 1 103 0
 746 009e 002D     		cmp	r5, #0
 747 00a0 E5D1     		bne	.L25
 109:printf-stdarg.c **** 	}
 110:printf-stdarg.c **** 
 111:printf-stdarg.c **** 	if (neg) {
 748              		.loc 1 111 0
 749 00a2 BAF1000F 		cmp	sl, #0
 750 00a6 18D0     		beq	.L26
 112:printf-stdarg.c **** 		if( width && (pad & PAD_ZERO) ) {
 751              		.loc 1 112 0
 752 00a8 3B6C     		ldr	r3, [r7, #64]
 753 00aa 002B     		cmp	r3, #0
 754 00ac 10D0     		beq	.L27
 755 00ae 7B6C     		ldr	r3, [r7, #68]
 756 00b0 03F00203 		and	r3, r3, #2
 757 00b4 002B     		cmp	r3, #0
 758 00b6 0BD0     		beq	.L27
 113:printf-stdarg.c **** 			printchar (out, '-');
 759              		.loc 1 113 0
 760 00b8 F868     		ldr	r0, [r7, #12]
 761 00ba 4FF02D01 		mov	r1, #45
 762 00be FFF7FEFF 		bl	printchar
 114:printf-stdarg.c **** 			++pc;
ARM GAS  /tmp/ccEnCxJF.s 			page 26


 763              		.loc 1 114 0
 764 00c2 08F10108 		add	r8, r8, #1
 115:printf-stdarg.c **** 			--width;
 765              		.loc 1 115 0
 766 00c6 3B6C     		ldr	r3, [r7, #64]
 767 00c8 03F1FF33 		add	r3, r3, #-1
 768 00cc 3B64     		str	r3, [r7, #64]
 769              		.loc 1 112 0
 770 00ce 04E0     		b	.L26
 771              	.L27:
 116:printf-stdarg.c **** 		}
 117:printf-stdarg.c **** 		else {
 118:printf-stdarg.c **** 			*--s = '-';
 772              		.loc 1 118 0
 773 00d0 04F1FF34 		add	r4, r4, #-1
 774 00d4 4FF02D03 		mov	r3, #45
 775 00d8 2370     		strb	r3, [r4, #0]
 776              	.L26:
 119:printf-stdarg.c **** 		}
 120:printf-stdarg.c **** 	}
 121:printf-stdarg.c **** 
 122:printf-stdarg.c **** 	return pc + prints (out, s, width, pad);
 777              		.loc 1 122 0
 778 00da F868     		ldr	r0, [r7, #12]
 779 00dc 2146     		mov	r1, r4
 780 00de 3A6C     		ldr	r2, [r7, #64]
 781 00e0 7B6C     		ldr	r3, [r7, #68]
 782 00e2 FFF7FEFF 		bl	prints
 783 00e6 0346     		mov	r3, r0
 784 00e8 4344     		add	r3, r3, r8
 785              	.L21:
 123:printf-stdarg.c **** }
 786              		.loc 1 123 0
 787 00ea 1846     		mov	r0, r3
 788 00ec 07F12407 		add	r7, r7, #36
 789 00f0 BD46     		mov	sp, r7
 790 00f2 BDE8F085 		pop	{r4, r5, r6, r7, r8, sl, pc}
 791              	.LFE2:
 792              		.size	printi, .-printi
 793 00f6 00BF     		.section	.rodata
 794              		.align	2
 795              	.LC0:
 796 0000 286E756C 		.ascii	"(null)\000"
 796      6C2900
 797 0007 00       		.section	.text.print,"ax",%progbits
 798              		.align	2
 799              		.thumb
 800              		.thumb_func
 801              		.type	print, %function
 802              	print:
 803              	.LFB3:
 124:printf-stdarg.c **** 
 125:printf-stdarg.c **** static int print( char **out, const char *format, va_list args )
 126:printf-stdarg.c **** {
 804              		.loc 1 126 0
 805              		@ args = 0, pretend = 0, frame = 24
 806              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccEnCxJF.s 			page 27


 807 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 808              	.LCFI9:
 809 0004 8AB0     		sub	sp, sp, #40
 810              	.LCFI10:
 811 0006 04AF     		add	r7, sp, #16
 812              	.LCFI11:
 813 0008 F860     		str	r0, [r7, #12]
 814 000a B960     		str	r1, [r7, #8]
 815 000c 7A60     		str	r2, [r7, #4]
 127:printf-stdarg.c **** 	register int width, pad;
 128:printf-stdarg.c **** 	register int pc = 0;
 816              		.loc 1 128 0
 817 000e 4FF00004 		mov	r4, #0
 129:printf-stdarg.c **** 	char scr[2];
 130:printf-stdarg.c **** 
 131:printf-stdarg.c **** 	for (; *format != 0; ++format) {
 818              		.loc 1 131 0
 819 0012 EDE0     		b	.L30
 820              	.L50:
 132:printf-stdarg.c **** 		if (*format == '%') {
 821              		.loc 1 132 0
 822 0014 BB68     		ldr	r3, [r7, #8]
 823 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 824 0018 252B     		cmp	r3, #37
 825 001a 40F0DB80 		bne	.L31
 133:printf-stdarg.c **** 			++format;
 826              		.loc 1 133 0
 827 001e BB68     		ldr	r3, [r7, #8]
 828 0020 03F10103 		add	r3, r3, #1
 829 0024 BB60     		str	r3, [r7, #8]
 134:printf-stdarg.c **** 			width = pad = 0;
 830              		.loc 1 134 0
 831 0026 4FF00006 		mov	r6, #0
 832 002a 3546     		mov	r5, r6
 135:printf-stdarg.c **** 			if (*format == '\0') break;
 833              		.loc 1 135 0
 834 002c BB68     		ldr	r3, [r7, #8]
 835 002e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 836 0030 002B     		cmp	r3, #0
 837 0032 00F0E380 		beq	.L53
 838              	.L32:
 136:printf-stdarg.c **** 			if (*format == '%') goto out;
 839              		.loc 1 136 0
 840 0036 BB68     		ldr	r3, [r7, #8]
 841 0038 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 842 003a 252B     		cmp	r3, #37
 843 003c 00F0C980 		beq	.L54
 844              	.L34:
 137:printf-stdarg.c **** 			if (*format == '-') {
 845              		.loc 1 137 0
 846 0040 BB68     		ldr	r3, [r7, #8]
 847 0042 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 848 0044 2D2B     		cmp	r3, #45
 849 0046 0DD1     		bne	.L55
 138:printf-stdarg.c **** 				++format;
 850              		.loc 1 138 0
 851 0048 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccEnCxJF.s 			page 28


 852 004a 03F10103 		add	r3, r3, #1
 853 004e BB60     		str	r3, [r7, #8]
 139:printf-stdarg.c **** 				pad = PAD_RIGHT;
 854              		.loc 1 139 0
 855 0050 4FF00106 		mov	r6, #1
 140:printf-stdarg.c **** 			}
 141:printf-stdarg.c **** 			while (*format == '0') {
 856              		.loc 1 141 0
 857 0054 07E0     		b	.L36
 858              	.L37:
 142:printf-stdarg.c **** 				++format;
 859              		.loc 1 142 0
 860 0056 BB68     		ldr	r3, [r7, #8]
 861 0058 03F10103 		add	r3, r3, #1
 862 005c BB60     		str	r3, [r7, #8]
 143:printf-stdarg.c **** 				pad |= PAD_ZERO;
 863              		.loc 1 143 0
 864 005e 46F00206 		orr	r6, r6, #2
 865 0062 00E0     		b	.L36
 866              	.L55:
 867              		.loc 1 141 0
 868 0064 00BF     		nop
 869              	.L36:
 870 0066 BB68     		ldr	r3, [r7, #8]
 871 0068 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 872 006a 302B     		cmp	r3, #48
 873 006c F3D0     		beq	.L37
 144:printf-stdarg.c **** 			}
 145:printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 874              		.loc 1 145 0
 875 006e 0FE0     		b	.L38
 876              	.L40:
 146:printf-stdarg.c **** 				width *= 10;
 877              		.loc 1 146 0
 878 0070 2B46     		mov	r3, r5
 879 0072 4FEA8303 		lsl	r3, r3, #2
 880 0076 2B44     		add	r3, r3, r5
 881 0078 4FEA4303 		lsl	r3, r3, #1
 882 007c 1D46     		mov	r5, r3
 147:printf-stdarg.c **** 				width += *format - '0';
 883              		.loc 1 147 0
 884 007e BB68     		ldr	r3, [r7, #8]
 885 0080 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 886 0082 A3F13003 		sub	r3, r3, #48
 887 0086 1D44     		add	r5, r5, r3
 888              		.loc 1 145 0
 889 0088 BB68     		ldr	r3, [r7, #8]
 890 008a 03F10103 		add	r3, r3, #1
 891 008e BB60     		str	r3, [r7, #8]
 892              	.L38:
 893 0090 BB68     		ldr	r3, [r7, #8]
 894 0092 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 895 0094 2F2B     		cmp	r3, #47
 896 0096 03D9     		bls	.L39
 897 0098 BB68     		ldr	r3, [r7, #8]
 898 009a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 899 009c 392B     		cmp	r3, #57
ARM GAS  /tmp/ccEnCxJF.s 			page 29


 900 009e E7D9     		bls	.L40
 901              	.L39:
 148:printf-stdarg.c **** 			}
 149:printf-stdarg.c **** 			if( *format == 's' ) {
 902              		.loc 1 149 0
 903 00a0 BB68     		ldr	r3, [r7, #8]
 904 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 905 00a4 732B     		cmp	r3, #115
 906 00a6 17D1     		bne	.L41
 907              	.LBB3:
 150:printf-stdarg.c **** 				register char *s = (char *)va_arg( args, int );
 908              		.loc 1 150 0
 909 00a8 7B68     		ldr	r3, [r7, #4]
 910 00aa 03F10402 		add	r2, r3, #4
 911 00ae 7A60     		str	r2, [r7, #4]
 912 00b0 1B68     		ldr	r3, [r3, #0]
 913 00b2 9846     		mov	r8, r3
 151:printf-stdarg.c **** 				pc += prints (out, s?s:"(null)", width, pad);
 914              		.loc 1 151 0
 915 00b4 B8F1000F 		cmp	r8, #0
 916 00b8 01D0     		beq	.L42
 917 00ba 4346     		mov	r3, r8
 918 00bc 03E0     		b	.L43
 919              	.L42:
 920 00be 40F20003 		movw	r3, #:lower16:.LC0
 921 00c2 C0F20003 		movt	r3, #:upper16:.LC0
 922              	.L43:
 923 00c6 F868     		ldr	r0, [r7, #12]
 924 00c8 1946     		mov	r1, r3
 925 00ca 2A46     		mov	r2, r5
 926 00cc 3346     		mov	r3, r6
 927 00ce FFF7FEFF 		bl	prints
 928 00d2 0346     		mov	r3, r0
 929 00d4 1C44     		add	r4, r4, r3
 152:printf-stdarg.c **** 				continue;
 930              		.loc 1 152 0
 931 00d6 87E0     		b	.L44
 932              	.L41:
 933              	.LBE3:
 153:printf-stdarg.c **** 			}
 154:printf-stdarg.c **** 			if( *format == 'd' ) {
 934              		.loc 1 154 0
 935 00d8 BB68     		ldr	r3, [r7, #8]
 936 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 937 00dc 642B     		cmp	r3, #100
 938 00de 14D1     		bne	.L45
 155:printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 1, width, pad, 'a');
 939              		.loc 1 155 0
 940 00e0 7B68     		ldr	r3, [r7, #4]
 941 00e2 03F10402 		add	r2, r3, #4
 942 00e6 7A60     		str	r2, [r7, #4]
 943 00e8 1B68     		ldr	r3, [r3, #0]
 944 00ea 0095     		str	r5, [sp, #0]
 945 00ec 0196     		str	r6, [sp, #4]
 946 00ee 4FF06102 		mov	r2, #97
 947 00f2 0292     		str	r2, [sp, #8]
 948 00f4 F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccEnCxJF.s 			page 30


 949 00f6 1946     		mov	r1, r3
 950 00f8 4FF00A02 		mov	r2, #10
 951 00fc 4FF00103 		mov	r3, #1
 952 0100 FFF7FEFF 		bl	printi
 953 0104 0346     		mov	r3, r0
 954 0106 1C44     		add	r4, r4, r3
 156:printf-stdarg.c **** 				continue;
 955              		.loc 1 156 0
 956 0108 6EE0     		b	.L44
 957              	.L45:
 157:printf-stdarg.c **** 			}
 158:printf-stdarg.c **** 			if( *format == 'x' ) {
 958              		.loc 1 158 0
 959 010a BB68     		ldr	r3, [r7, #8]
 960 010c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 961 010e 782B     		cmp	r3, #120
 962 0110 14D1     		bne	.L46
 159:printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'a');
 963              		.loc 1 159 0
 964 0112 7B68     		ldr	r3, [r7, #4]
 965 0114 03F10402 		add	r2, r3, #4
 966 0118 7A60     		str	r2, [r7, #4]
 967 011a 1B68     		ldr	r3, [r3, #0]
 968 011c 0095     		str	r5, [sp, #0]
 969 011e 0196     		str	r6, [sp, #4]
 970 0120 4FF06102 		mov	r2, #97
 971 0124 0292     		str	r2, [sp, #8]
 972 0126 F868     		ldr	r0, [r7, #12]
 973 0128 1946     		mov	r1, r3
 974 012a 4FF01002 		mov	r2, #16
 975 012e 4FF00003 		mov	r3, #0
 976 0132 FFF7FEFF 		bl	printi
 977 0136 0346     		mov	r3, r0
 978 0138 1C44     		add	r4, r4, r3
 160:printf-stdarg.c **** 				continue;
 979              		.loc 1 160 0
 980 013a 55E0     		b	.L44
 981              	.L46:
 161:printf-stdarg.c **** 			}
 162:printf-stdarg.c **** 			if( *format == 'X' ) {
 982              		.loc 1 162 0
 983 013c BB68     		ldr	r3, [r7, #8]
 984 013e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 985 0140 582B     		cmp	r3, #88
 986 0142 14D1     		bne	.L47
 163:printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'A');
 987              		.loc 1 163 0
 988 0144 7B68     		ldr	r3, [r7, #4]
 989 0146 03F10402 		add	r2, r3, #4
 990 014a 7A60     		str	r2, [r7, #4]
 991 014c 1B68     		ldr	r3, [r3, #0]
 992 014e 0095     		str	r5, [sp, #0]
 993 0150 0196     		str	r6, [sp, #4]
 994 0152 4FF04102 		mov	r2, #65
 995 0156 0292     		str	r2, [sp, #8]
 996 0158 F868     		ldr	r0, [r7, #12]
 997 015a 1946     		mov	r1, r3
ARM GAS  /tmp/ccEnCxJF.s 			page 31


 998 015c 4FF01002 		mov	r2, #16
 999 0160 4FF00003 		mov	r3, #0
 1000 0164 FFF7FEFF 		bl	printi
 1001 0168 0346     		mov	r3, r0
 1002 016a 1C44     		add	r4, r4, r3
 164:printf-stdarg.c **** 				continue;
 1003              		.loc 1 164 0
 1004 016c 3CE0     		b	.L44
 1005              	.L47:
 165:printf-stdarg.c **** 			}
 166:printf-stdarg.c **** 			if( *format == 'u' ) {
 1006              		.loc 1 166 0
 1007 016e BB68     		ldr	r3, [r7, #8]
 1008 0170 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1009 0172 752B     		cmp	r3, #117
 1010 0174 14D1     		bne	.L48
 167:printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 0, width, pad, 'a');
 1011              		.loc 1 167 0
 1012 0176 7B68     		ldr	r3, [r7, #4]
 1013 0178 03F10402 		add	r2, r3, #4
 1014 017c 7A60     		str	r2, [r7, #4]
 1015 017e 1B68     		ldr	r3, [r3, #0]
 1016 0180 0095     		str	r5, [sp, #0]
 1017 0182 0196     		str	r6, [sp, #4]
 1018 0184 4FF06102 		mov	r2, #97
 1019 0188 0292     		str	r2, [sp, #8]
 1020 018a F868     		ldr	r0, [r7, #12]
 1021 018c 1946     		mov	r1, r3
 1022 018e 4FF00A02 		mov	r2, #10
 1023 0192 4FF00003 		mov	r3, #0
 1024 0196 FFF7FEFF 		bl	printi
 1025 019a 0346     		mov	r3, r0
 1026 019c 1C44     		add	r4, r4, r3
 168:printf-stdarg.c **** 				continue;
 1027              		.loc 1 168 0
 1028 019e 23E0     		b	.L44
 1029              	.L48:
 169:printf-stdarg.c **** 			}
 170:printf-stdarg.c **** 			if( *format == 'c' ) {
 1030              		.loc 1 170 0
 1031 01a0 BB68     		ldr	r3, [r7, #8]
 1032 01a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1033 01a4 632B     		cmp	r3, #99
 1034 01a6 1ED1     		bne	.L56
 171:printf-stdarg.c **** 				/* char are converted to int then pushed on the stack */
 172:printf-stdarg.c **** 				scr[0] = (char)va_arg( args, int );
 1035              		.loc 1 172 0
 1036 01a8 7B68     		ldr	r3, [r7, #4]
 1037 01aa 03F10402 		add	r2, r3, #4
 1038 01ae 7A60     		str	r2, [r7, #4]
 1039 01b0 1B68     		ldr	r3, [r3, #0]
 1040 01b2 DBB2     		uxtb	r3, r3
 1041 01b4 3B75     		strb	r3, [r7, #20]
 173:printf-stdarg.c **** 				scr[1] = '\0';
 1042              		.loc 1 173 0
 1043 01b6 4FF00003 		mov	r3, #0
 1044 01ba 7B75     		strb	r3, [r7, #21]
ARM GAS  /tmp/ccEnCxJF.s 			page 32


 174:printf-stdarg.c **** 				pc += prints (out, scr, width, pad);
 1045              		.loc 1 174 0
 1046 01bc 07F11403 		add	r3, r7, #20
 1047 01c0 F868     		ldr	r0, [r7, #12]
 1048 01c2 1946     		mov	r1, r3
 1049 01c4 2A46     		mov	r2, r5
 1050 01c6 3346     		mov	r3, r6
 1051 01c8 FFF7FEFF 		bl	prints
 1052 01cc 0346     		mov	r3, r0
 1053 01ce 1C44     		add	r4, r4, r3
 175:printf-stdarg.c **** 				continue;
 1054              		.loc 1 175 0
 1055 01d0 0AE0     		b	.L44
 1056              	.L54:
 1057              		.loc 1 136 0
 1058 01d2 00BF     		nop
 1059              	.L31:
 176:printf-stdarg.c **** 			}
 177:printf-stdarg.c **** 		}
 178:printf-stdarg.c **** 		else {
 179:printf-stdarg.c **** 		out:
 180:printf-stdarg.c **** 			printchar (out, *format);
 1060              		.loc 1 180 0
 1061 01d4 BB68     		ldr	r3, [r7, #8]
 1062 01d6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1063 01d8 F868     		ldr	r0, [r7, #12]
 1064 01da 1946     		mov	r1, r3
 1065 01dc FFF7FEFF 		bl	printchar
 181:printf-stdarg.c **** 			++pc;
 1066              		.loc 1 181 0
 1067 01e0 04F10104 		add	r4, r4, #1
 1068 01e4 00E0     		b	.L44
 1069              	.L56:
 1070              		.loc 1 175 0
 1071 01e6 00BF     		nop
 1072              	.L44:
 1073              		.loc 1 131 0
 1074 01e8 BB68     		ldr	r3, [r7, #8]
 1075 01ea 03F10103 		add	r3, r3, #1
 1076 01ee BB60     		str	r3, [r7, #8]
 1077              	.L30:
 1078 01f0 BB68     		ldr	r3, [r7, #8]
 1079 01f2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1080 01f4 002B     		cmp	r3, #0
 1081 01f6 7FF40DAF 		bne	.L50
 1082 01fa 00E0     		b	.L33
 1083              	.L53:
 1084              		.loc 1 135 0
 1085 01fc 00BF     		nop
 1086              	.L33:
 182:printf-stdarg.c **** 		}
 183:printf-stdarg.c **** 	}
 184:printf-stdarg.c **** 	if (out) **out = '\0';
 1087              		.loc 1 184 0
 1088 01fe FB68     		ldr	r3, [r7, #12]
 1089 0200 002B     		cmp	r3, #0
 1090 0202 04D0     		beq	.L51
ARM GAS  /tmp/ccEnCxJF.s 			page 33


 1091 0204 FB68     		ldr	r3, [r7, #12]
 1092 0206 1B68     		ldr	r3, [r3, #0]
 1093 0208 4FF00002 		mov	r2, #0
 1094 020c 1A70     		strb	r2, [r3, #0]
 1095              	.L51:
 185:printf-stdarg.c **** 	va_end( args );
 186:printf-stdarg.c **** 	return pc;
 1096              		.loc 1 186 0
 1097 020e 2346     		mov	r3, r4
 187:printf-stdarg.c **** }
 1098              		.loc 1 187 0
 1099 0210 1846     		mov	r0, r3
 1100 0212 07F11807 		add	r7, r7, #24
 1101 0216 BD46     		mov	sp, r7
 1102 0218 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1103              	.LFE3:
 1104              		.size	print, .-print
 1105              		.section	.text.printf,"ax",%progbits
 1106              		.align	2
 1107              		.global	printf
 1108              		.thumb
 1109              		.thumb_func
 1110              		.type	printf, %function
 1111              	printf:
 1112              	.LFB4:
 188:printf-stdarg.c **** 
 189:printf-stdarg.c **** int printf(const char *format, ...)
 190:printf-stdarg.c **** {
 1113              		.loc 1 190 0
 1114              		@ args = 4, pretend = 16, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 1
 1116 0000 0FB4     		push	{r0, r1, r2, r3}
 1117              	.LCFI12:
 1118 0002 80B5     		push	{r7, lr}
 1119              	.LCFI13:
 1120 0004 82B0     		sub	sp, sp, #8
 1121              	.LCFI14:
 1122 0006 00AF     		add	r7, sp, #0
 1123              	.LCFI15:
 191:printf-stdarg.c ****         va_list args;
 192:printf-stdarg.c ****         
 193:printf-stdarg.c ****         va_start( args, format );
 1124              		.loc 1 193 0
 1125 0008 07F11403 		add	r3, r7, #20
 1126 000c 7B60     		str	r3, [r7, #4]
 194:printf-stdarg.c ****         return print( 0, format, args );
 1127              		.loc 1 194 0
 1128 000e 4FF00000 		mov	r0, #0
 1129 0012 3969     		ldr	r1, [r7, #16]
 1130 0014 7A68     		ldr	r2, [r7, #4]
 1131 0016 FFF7FEFF 		bl	print
 1132 001a 0346     		mov	r3, r0
 195:printf-stdarg.c **** }
 1133              		.loc 1 195 0
 1134 001c 1846     		mov	r0, r3
 1135 001e 07F10807 		add	r7, r7, #8
 1136 0022 BD46     		mov	sp, r7
ARM GAS  /tmp/ccEnCxJF.s 			page 34


 1137 0024 BDE88040 		pop	{r7, lr}
 1138 0028 04B0     		add	sp, sp, #16
 1139 002a 7047     		bx	lr
 1140              	.LFE4:
 1141              		.size	printf, .-printf
 1142              		.section	.text.sprintf,"ax",%progbits
 1143              		.align	2
 1144              		.global	sprintf
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	sprintf, %function
 1148              	sprintf:
 1149              	.LFB5:
 196:printf-stdarg.c **** 
 197:printf-stdarg.c **** int sprintf(char *out, const char *format, ...)
 198:printf-stdarg.c **** {
 1150              		.loc 1 198 0
 1151              		@ args = 4, pretend = 12, frame = 16
 1152              		@ frame_needed = 1, uses_anonymous_args = 1
 1153 0000 0EB4     		push	{r1, r2, r3}
 1154              	.LCFI16:
 1155 0002 80B5     		push	{r7, lr}
 1156              	.LCFI17:
 1157 0004 85B0     		sub	sp, sp, #20
 1158              	.LCFI18:
 1159 0006 00AF     		add	r7, sp, #0
 1160              	.LCFI19:
 1161 0008 7860     		str	r0, [r7, #4]
 199:printf-stdarg.c ****         va_list args;
 200:printf-stdarg.c ****         
 201:printf-stdarg.c ****         va_start( args, format );
 1162              		.loc 1 201 0
 1163 000a 07F12003 		add	r3, r7, #32
 1164 000e FB60     		str	r3, [r7, #12]
 202:printf-stdarg.c ****         return print( &out, format, args );
 1165              		.loc 1 202 0
 1166 0010 07F10403 		add	r3, r7, #4
 1167 0014 1846     		mov	r0, r3
 1168 0016 F969     		ldr	r1, [r7, #28]
 1169 0018 FA68     		ldr	r2, [r7, #12]
 1170 001a FFF7FEFF 		bl	print
 1171 001e 0346     		mov	r3, r0
 203:printf-stdarg.c **** }
 1172              		.loc 1 203 0
 1173 0020 1846     		mov	r0, r3
 1174 0022 07F11407 		add	r7, r7, #20
 1175 0026 BD46     		mov	sp, r7
 1176 0028 BDE88040 		pop	{r7, lr}
 1177 002c 03B0     		add	sp, sp, #12
 1178 002e 7047     		bx	lr
 1179              	.LFE5:
 1180              		.size	sprintf, .-sprintf
 1181              		.section	.text.snprintf,"ax",%progbits
 1182              		.align	2
 1183              		.global	snprintf
 1184              		.thumb
 1185              		.thumb_func
ARM GAS  /tmp/ccEnCxJF.s 			page 35


 1186              		.type	snprintf, %function
 1187              	snprintf:
 1188              	.LFB6:
 204:printf-stdarg.c **** 
 205:printf-stdarg.c **** 
 206:printf-stdarg.c **** int snprintf( char *buf, unsigned int count, const char *format, ... )
 207:printf-stdarg.c **** {
 1189              		.loc 1 207 0
 1190              		@ args = 4, pretend = 8, frame = 16
 1191              		@ frame_needed = 1, uses_anonymous_args = 1
 1192 0000 0CB4     		push	{r2, r3}
 1193              	.LCFI20:
 1194 0002 80B5     		push	{r7, lr}
 1195              	.LCFI21:
 1196 0004 84B0     		sub	sp, sp, #16
 1197              	.LCFI22:
 1198 0006 00AF     		add	r7, sp, #0
 1199              	.LCFI23:
 1200 0008 7860     		str	r0, [r7, #4]
 1201 000a 3960     		str	r1, [r7, #0]
 208:printf-stdarg.c ****         va_list args;
 209:printf-stdarg.c ****         
 210:printf-stdarg.c ****         ( void ) count;
 211:printf-stdarg.c ****         
 212:printf-stdarg.c ****         va_start( args, format );
 1202              		.loc 1 212 0
 1203 000c 07F11C03 		add	r3, r7, #28
 1204 0010 FB60     		str	r3, [r7, #12]
 213:printf-stdarg.c ****         return print( &buf, format, args );
 1205              		.loc 1 213 0
 1206 0012 07F10403 		add	r3, r7, #4
 1207 0016 1846     		mov	r0, r3
 1208 0018 B969     		ldr	r1, [r7, #24]
 1209 001a FA68     		ldr	r2, [r7, #12]
 1210 001c FFF7FEFF 		bl	print
 1211 0020 0346     		mov	r3, r0
 214:printf-stdarg.c **** }
 1212              		.loc 1 214 0
 1213 0022 1846     		mov	r0, r3
 1214 0024 07F11007 		add	r7, r7, #16
 1215 0028 BD46     		mov	sp, r7
 1216 002a BDE88040 		pop	{r7, lr}
 1217 002e 02B0     		add	sp, sp, #8
 1218 0030 7047     		bx	lr
 1219              	.LFE6:
 1220              		.size	snprintf, .-snprintf
 1221 0032 00BF     		.section	.text.write,"ax",%progbits
 1222              		.align	2
 1223              		.global	write
 1224              		.thumb
 1225              		.thumb_func
 1226              		.type	write, %function
 1227              	write:
 1228              	.LFB7:
 215:printf-stdarg.c **** 
 216:printf-stdarg.c **** 
 217:printf-stdarg.c **** #ifdef TEST_PRINTF
ARM GAS  /tmp/ccEnCxJF.s 			page 36


 218:printf-stdarg.c **** int main(void)
 219:printf-stdarg.c **** {
 220:printf-stdarg.c **** 	char *ptr = "Hello world!";
 221:printf-stdarg.c **** 	char *np = 0;
 222:printf-stdarg.c **** 	int i = 5;
 223:printf-stdarg.c **** 	unsigned int bs = sizeof(int)*8;
 224:printf-stdarg.c **** 	int mi;
 225:printf-stdarg.c **** 	char buf[80];
 226:printf-stdarg.c **** 
 227:printf-stdarg.c **** 	mi = (1 << (bs-1)) + 1;
 228:printf-stdarg.c **** 	printf("%s\n", ptr);
 229:printf-stdarg.c **** 	printf("printf test\n");
 230:printf-stdarg.c **** 	printf("%s is null pointer\n", np);
 231:printf-stdarg.c **** 	printf("%d = 5\n", i);
 232:printf-stdarg.c **** 	printf("%d = - max int\n", mi);
 233:printf-stdarg.c **** 	printf("char %c = 'a'\n", 'a');
 234:printf-stdarg.c **** 	printf("hex %x = ff\n", 0xff);
 235:printf-stdarg.c **** 	printf("hex %02x = 00\n", 0);
 236:printf-stdarg.c **** 	printf("signed %d = unsigned %u = hex %x\n", -3, -3, -3);
 237:printf-stdarg.c **** 	printf("%d %s(s)%", 0, "message");
 238:printf-stdarg.c **** 	printf("\n");
 239:printf-stdarg.c **** 	printf("%d %s(s) with %%\n", 0, "message");
 240:printf-stdarg.c **** 	sprintf(buf, "justif: \"%-10s\"\n", "left"); printf("%s", buf);
 241:printf-stdarg.c **** 	sprintf(buf, "justif: \"%10s\"\n", "right"); printf("%s", buf);
 242:printf-stdarg.c **** 	sprintf(buf, " 3: %04d zero padded\n", 3); printf("%s", buf);
 243:printf-stdarg.c **** 	sprintf(buf, " 3: %-4d left justif.\n", 3); printf("%s", buf);
 244:printf-stdarg.c **** 	sprintf(buf, " 3: %4d right justif.\n", 3); printf("%s", buf);
 245:printf-stdarg.c **** 	sprintf(buf, "-3: %04d zero padded\n", -3); printf("%s", buf);
 246:printf-stdarg.c **** 	sprintf(buf, "-3: %-4d left justif.\n", -3); printf("%s", buf);
 247:printf-stdarg.c **** 	sprintf(buf, "-3: %4d right justif.\n", -3); printf("%s", buf);
 248:printf-stdarg.c **** 
 249:printf-stdarg.c **** 	return 0;
 250:printf-stdarg.c **** }
 251:printf-stdarg.c **** 
 252:printf-stdarg.c **** /*
 253:printf-stdarg.c ****  * if you compile this file with
 254:printf-stdarg.c ****  *   gcc -Wall $(YOUR_C_OPTIONS) -DTEST_PRINTF -c printf.c
 255:printf-stdarg.c ****  * you will get a normal warning:
 256:printf-stdarg.c ****  *   printf.c:214: warning: spurious trailing `%' in format
 257:printf-stdarg.c ****  * this line is testing an invalid % at the end of the format string.
 258:printf-stdarg.c ****  *
 259:printf-stdarg.c ****  * this should display (on 32bit int machine) :
 260:printf-stdarg.c ****  *
 261:printf-stdarg.c ****  * Hello world!
 262:printf-stdarg.c ****  * printf test
 263:printf-stdarg.c ****  * (null) is null pointer
 264:printf-stdarg.c ****  * 5 = 5
 265:printf-stdarg.c ****  * -2147483647 = - max int
 266:printf-stdarg.c ****  * char a = 'a'
 267:printf-stdarg.c ****  * hex ff = ff
 268:printf-stdarg.c ****  * hex 00 = 00
 269:printf-stdarg.c ****  * signed -3 = unsigned 4294967293 = hex fffffffd
 270:printf-stdarg.c ****  * 0 message(s)
 271:printf-stdarg.c ****  * 0 message(s) with %
 272:printf-stdarg.c ****  * justif: "left      "
 273:printf-stdarg.c ****  * justif: "     right"
 274:printf-stdarg.c ****  *  3: 0003 zero padded
ARM GAS  /tmp/ccEnCxJF.s 			page 37


 275:printf-stdarg.c ****  *  3: 3    left justif.
 276:printf-stdarg.c ****  *  3:    3 right justif.
 277:printf-stdarg.c ****  * -3: -003 zero padded
 278:printf-stdarg.c ****  * -3: -3   left justif.
 279:printf-stdarg.c ****  * -3:   -3 right justif.
 280:printf-stdarg.c ****  */
 281:printf-stdarg.c **** 
 282:printf-stdarg.c **** #endif
 283:printf-stdarg.c **** 
 284:printf-stdarg.c **** 
 285:printf-stdarg.c **** /* To keep linker happy. */
 286:printf-stdarg.c **** int	write( int i, char* c, int n)
 287:printf-stdarg.c **** {
 1229              		.loc 1 287 0
 1230              		@ args = 0, pretend = 0, frame = 16
 1231              		@ frame_needed = 1, uses_anonymous_args = 0
 1232              		@ link register save eliminated.
 1233 0000 80B4     		push	{r7}
 1234              	.LCFI24:
 1235 0002 85B0     		sub	sp, sp, #20
 1236              	.LCFI25:
 1237 0004 00AF     		add	r7, sp, #0
 1238              	.LCFI26:
 1239 0006 F860     		str	r0, [r7, #12]
 1240 0008 B960     		str	r1, [r7, #8]
 1241 000a 7A60     		str	r2, [r7, #4]
 288:printf-stdarg.c **** 	(void)i;
 289:printf-stdarg.c **** 	(void)n;
 290:printf-stdarg.c **** 	(void)c;
 291:printf-stdarg.c **** 	return 0;
 1242              		.loc 1 291 0
 1243 000c 4FF00003 		mov	r3, #0
 292:printf-stdarg.c **** }
 1244              		.loc 1 292 0
 1245 0010 1846     		mov	r0, r3
 1246 0012 07F11407 		add	r7, r7, #20
 1247 0016 BD46     		mov	sp, r7
 1248 0018 80BC     		pop	{r7}
 1249 001a 7047     		bx	lr
 1250              	.LFE7:
 1251              		.size	write, .-write
 1252              		.section	.debug_frame,"",%progbits
 1253              	.Lframe0:
 1254 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
 1255              	.LSCIE0:
 1256 0004 FFFFFFFF 		.4byte	0xffffffff
 1257 0008 01       		.byte	0x1
 1258 0009 00       		.ascii	"\000"
 1259 000a 01       		.uleb128 0x1
 1260 000b 7C       		.sleb128 -4
 1261 000c 0E       		.byte	0xe
 1262 000d 0C       		.byte	0xc
 1263 000e 0D       		.uleb128 0xd
 1264 000f 00       		.uleb128 0x0
 1265              		.align	2
 1266              	.LECIE0:
 1267              	.LSFDE0:
ARM GAS  /tmp/ccEnCxJF.s 			page 38


 1268 0010 18000000 		.4byte	.LEFDE0-.LASFDE0
 1269              	.LASFDE0:
 1270 0014 00000000 		.4byte	.Lframe0
 1271 0018 00000000 		.4byte	.LFB0
 1272 001c 30000000 		.4byte	.LFE0-.LFB0
 1273 0020 42       		.byte	0x4
 1274              		.4byte	.LCFI0-.LFB0
 1275 0021 0E       		.byte	0xe
 1276 0022 04       		.uleb128 0x4
 1277 0023 42       		.byte	0x4
 1278              		.4byte	.LCFI1-.LCFI0
 1279 0024 0E       		.byte	0xe
 1280 0025 10       		.uleb128 0x10
 1281 0026 11       		.byte	0x11
 1282 0027 07       		.uleb128 0x7
 1283 0028 01       		.sleb128 1
 1284 0029 42       		.byte	0x4
 1285              		.4byte	.LCFI2-.LCFI1
 1286 002a 0D       		.byte	0xd
 1287 002b 07       		.uleb128 0x7
 1288              		.align	2
 1289              	.LEFDE0:
 1290              	.LSFDE2:
 1291 002c 28000000 		.4byte	.LEFDE2-.LASFDE2
 1292              	.LASFDE2:
 1293 0030 00000000 		.4byte	.Lframe0
 1294 0034 00000000 		.4byte	.LFB1
 1295 0038 D2000000 		.4byte	.LFE1-.LFB1
 1296 003c 44       		.byte	0x4
 1297              		.4byte	.LCFI3-.LFB1
 1298 003d 0E       		.byte	0xe
 1299 003e 18       		.uleb128 0x18
 1300 003f 42       		.byte	0x4
 1301              		.4byte	.LCFI4-.LCFI3
 1302 0040 0E       		.byte	0xe
 1303 0041 28       		.uleb128 0x28
 1304 0042 11       		.byte	0x11
 1305 0043 0E       		.uleb128 0xe
 1306 0044 01       		.sleb128 1
 1307 0045 11       		.byte	0x11
 1308 0046 08       		.uleb128 0x8
 1309 0047 02       		.sleb128 2
 1310 0048 11       		.byte	0x11
 1311 0049 07       		.uleb128 0x7
 1312 004a 03       		.sleb128 3
 1313 004b 11       		.byte	0x11
 1314 004c 06       		.uleb128 0x6
 1315 004d 04       		.sleb128 4
 1316 004e 11       		.byte	0x11
 1317 004f 05       		.uleb128 0x5
 1318 0050 05       		.sleb128 5
 1319 0051 11       		.byte	0x11
 1320 0052 04       		.uleb128 0x4
 1321 0053 06       		.sleb128 6
 1322 0054 42       		.byte	0x4
 1323              		.4byte	.LCFI5-.LCFI4
 1324 0055 0D       		.byte	0xd
ARM GAS  /tmp/ccEnCxJF.s 			page 39


 1325 0056 07       		.uleb128 0x7
 1326 0057 00       		.align	2
 1327              	.LEFDE2:
 1328              	.LSFDE4:
 1329 0058 2C000000 		.4byte	.LEFDE4-.LASFDE4
 1330              	.LASFDE4:
 1331 005c 00000000 		.4byte	.Lframe0
 1332 0060 00000000 		.4byte	.LFB2
 1333 0064 F6000000 		.4byte	.LFE2-.LFB2
 1334 0068 44       		.byte	0x4
 1335              		.4byte	.LCFI6-.LFB2
 1336 0069 0E       		.byte	0xe
 1337 006a 1C       		.uleb128 0x1c
 1338 006b 42       		.byte	0x4
 1339              		.4byte	.LCFI7-.LCFI6
 1340 006c 0E       		.byte	0xe
 1341 006d 40       		.uleb128 0x40
 1342 006e 11       		.byte	0x11
 1343 006f 0E       		.uleb128 0xe
 1344 0070 01       		.sleb128 1
 1345 0071 11       		.byte	0x11
 1346 0072 0A       		.uleb128 0xa
 1347 0073 02       		.sleb128 2
 1348 0074 11       		.byte	0x11
 1349 0075 08       		.uleb128 0x8
 1350 0076 03       		.sleb128 3
 1351 0077 11       		.byte	0x11
 1352 0078 07       		.uleb128 0x7
 1353 0079 04       		.sleb128 4
 1354 007a 11       		.byte	0x11
 1355 007b 06       		.uleb128 0x6
 1356 007c 05       		.sleb128 5
 1357 007d 11       		.byte	0x11
 1358 007e 05       		.uleb128 0x5
 1359 007f 06       		.sleb128 6
 1360 0080 11       		.byte	0x11
 1361 0081 04       		.uleb128 0x4
 1362 0082 07       		.sleb128 7
 1363 0083 42       		.byte	0x4
 1364              		.4byte	.LCFI8-.LCFI7
 1365 0084 0D       		.byte	0xd
 1366 0085 07       		.uleb128 0x7
 1367 0086 0000     		.align	2
 1368              	.LEFDE4:
 1369              	.LSFDE6:
 1370 0088 28000000 		.4byte	.LEFDE6-.LASFDE6
 1371              	.LASFDE6:
 1372 008c 00000000 		.4byte	.Lframe0
 1373 0090 00000000 		.4byte	.LFB3
 1374 0094 1C020000 		.4byte	.LFE3-.LFB3
 1375 0098 44       		.byte	0x4
 1376              		.4byte	.LCFI9-.LFB3
 1377 0099 0E       		.byte	0xe
 1378 009a 18       		.uleb128 0x18
 1379 009b 42       		.byte	0x4
 1380              		.4byte	.LCFI10-.LCFI9
 1381 009c 0E       		.byte	0xe
ARM GAS  /tmp/ccEnCxJF.s 			page 40


 1382 009d 40       		.uleb128 0x40
 1383 009e 11       		.byte	0x11
 1384 009f 0E       		.uleb128 0xe
 1385 00a0 01       		.sleb128 1
 1386 00a1 11       		.byte	0x11
 1387 00a2 08       		.uleb128 0x8
 1388 00a3 02       		.sleb128 2
 1389 00a4 11       		.byte	0x11
 1390 00a5 07       		.uleb128 0x7
 1391 00a6 03       		.sleb128 3
 1392 00a7 11       		.byte	0x11
 1393 00a8 06       		.uleb128 0x6
 1394 00a9 04       		.sleb128 4
 1395 00aa 11       		.byte	0x11
 1396 00ab 05       		.uleb128 0x5
 1397 00ac 05       		.sleb128 5
 1398 00ad 11       		.byte	0x11
 1399 00ae 04       		.uleb128 0x4
 1400 00af 06       		.sleb128 6
 1401 00b0 42       		.byte	0x4
 1402              		.4byte	.LCFI11-.LCFI10
 1403 00b1 0C       		.byte	0xc
 1404 00b2 07       		.uleb128 0x7
 1405 00b3 30       		.uleb128 0x30
 1406              		.align	2
 1407              	.LEFDE6:
 1408              	.LSFDE8:
 1409 00b4 2C000000 		.4byte	.LEFDE8-.LASFDE8
 1410              	.LASFDE8:
 1411 00b8 00000000 		.4byte	.Lframe0
 1412 00bc 00000000 		.4byte	.LFB4
 1413 00c0 2C000000 		.4byte	.LFE4-.LFB4
 1414 00c4 42       		.byte	0x4
 1415              		.4byte	.LCFI12-.LFB4
 1416 00c5 0E       		.byte	0xe
 1417 00c6 10       		.uleb128 0x10
 1418 00c7 42       		.byte	0x4
 1419              		.4byte	.LCFI13-.LCFI12
 1420 00c8 0E       		.byte	0xe
 1421 00c9 18       		.uleb128 0x18
 1422 00ca 42       		.byte	0x4
 1423              		.4byte	.LCFI14-.LCFI13
 1424 00cb 0E       		.byte	0xe
 1425 00cc 20       		.uleb128 0x20
 1426 00cd 11       		.byte	0x11
 1427 00ce 0E       		.uleb128 0xe
 1428 00cf 05       		.sleb128 5
 1429 00d0 11       		.byte	0x11
 1430 00d1 07       		.uleb128 0x7
 1431 00d2 06       		.sleb128 6
 1432 00d3 11       		.byte	0x11
 1433 00d4 03       		.uleb128 0x3
 1434 00d5 01       		.sleb128 1
 1435 00d6 11       		.byte	0x11
 1436 00d7 02       		.uleb128 0x2
 1437 00d8 02       		.sleb128 2
 1438 00d9 11       		.byte	0x11
ARM GAS  /tmp/ccEnCxJF.s 			page 41


 1439 00da 01       		.uleb128 0x1
 1440 00db 03       		.sleb128 3
 1441 00dc 11       		.byte	0x11
 1442 00dd 00       		.uleb128 0x0
 1443 00de 04       		.sleb128 4
 1444 00df 42       		.byte	0x4
 1445              		.4byte	.LCFI15-.LCFI14
 1446 00e0 0D       		.byte	0xd
 1447 00e1 07       		.uleb128 0x7
 1448 00e2 0000     		.align	2
 1449              	.LEFDE8:
 1450              	.LSFDE10:
 1451 00e4 28000000 		.4byte	.LEFDE10-.LASFDE10
 1452              	.LASFDE10:
 1453 00e8 00000000 		.4byte	.Lframe0
 1454 00ec 00000000 		.4byte	.LFB5
 1455 00f0 30000000 		.4byte	.LFE5-.LFB5
 1456 00f4 42       		.byte	0x4
 1457              		.4byte	.LCFI16-.LFB5
 1458 00f5 0E       		.byte	0xe
 1459 00f6 0C       		.uleb128 0xc
 1460 00f7 42       		.byte	0x4
 1461              		.4byte	.LCFI17-.LCFI16
 1462 00f8 0E       		.byte	0xe
 1463 00f9 14       		.uleb128 0x14
 1464 00fa 42       		.byte	0x4
 1465              		.4byte	.LCFI18-.LCFI17
 1466 00fb 0E       		.byte	0xe
 1467 00fc 28       		.uleb128 0x28
 1468 00fd 11       		.byte	0x11
 1469 00fe 0E       		.uleb128 0xe
 1470 00ff 04       		.sleb128 4
 1471 0100 11       		.byte	0x11
 1472 0101 07       		.uleb128 0x7
 1473 0102 05       		.sleb128 5
 1474 0103 11       		.byte	0x11
 1475 0104 03       		.uleb128 0x3
 1476 0105 01       		.sleb128 1
 1477 0106 11       		.byte	0x11
 1478 0107 02       		.uleb128 0x2
 1479 0108 02       		.sleb128 2
 1480 0109 11       		.byte	0x11
 1481 010a 01       		.uleb128 0x1
 1482 010b 03       		.sleb128 3
 1483 010c 42       		.byte	0x4
 1484              		.4byte	.LCFI19-.LCFI18
 1485 010d 0D       		.byte	0xd
 1486 010e 07       		.uleb128 0x7
 1487 010f 00       		.align	2
 1488              	.LEFDE10:
 1489              	.LSFDE12:
 1490 0110 24000000 		.4byte	.LEFDE12-.LASFDE12
 1491              	.LASFDE12:
 1492 0114 00000000 		.4byte	.Lframe0
 1493 0118 00000000 		.4byte	.LFB6
 1494 011c 32000000 		.4byte	.LFE6-.LFB6
 1495 0120 42       		.byte	0x4
ARM GAS  /tmp/ccEnCxJF.s 			page 42


 1496              		.4byte	.LCFI20-.LFB6
 1497 0121 0E       		.byte	0xe
 1498 0122 08       		.uleb128 0x8
 1499 0123 42       		.byte	0x4
 1500              		.4byte	.LCFI21-.LCFI20
 1501 0124 0E       		.byte	0xe
 1502 0125 10       		.uleb128 0x10
 1503 0126 42       		.byte	0x4
 1504              		.4byte	.LCFI22-.LCFI21
 1505 0127 0E       		.byte	0xe
 1506 0128 20       		.uleb128 0x20
 1507 0129 11       		.byte	0x11
 1508 012a 0E       		.uleb128 0xe
 1509 012b 03       		.sleb128 3
 1510 012c 11       		.byte	0x11
 1511 012d 07       		.uleb128 0x7
 1512 012e 04       		.sleb128 4
 1513 012f 11       		.byte	0x11
 1514 0130 03       		.uleb128 0x3
 1515 0131 01       		.sleb128 1
 1516 0132 11       		.byte	0x11
 1517 0133 02       		.uleb128 0x2
 1518 0134 02       		.sleb128 2
 1519 0135 42       		.byte	0x4
 1520              		.4byte	.LCFI23-.LCFI22
 1521 0136 0D       		.byte	0xd
 1522 0137 07       		.uleb128 0x7
 1523              		.align	2
 1524              	.LEFDE12:
 1525              	.LSFDE14:
 1526 0138 18000000 		.4byte	.LEFDE14-.LASFDE14
 1527              	.LASFDE14:
 1528 013c 00000000 		.4byte	.Lframe0
 1529 0140 00000000 		.4byte	.LFB7
 1530 0144 1C000000 		.4byte	.LFE7-.LFB7
 1531 0148 42       		.byte	0x4
 1532              		.4byte	.LCFI24-.LFB7
 1533 0149 0E       		.byte	0xe
 1534 014a 04       		.uleb128 0x4
 1535 014b 42       		.byte	0x4
 1536              		.4byte	.LCFI25-.LCFI24
 1537 014c 0E       		.byte	0xe
 1538 014d 18       		.uleb128 0x18
 1539 014e 11       		.byte	0x11
 1540 014f 07       		.uleb128 0x7
 1541 0150 01       		.sleb128 1
 1542 0151 42       		.byte	0x4
 1543              		.4byte	.LCFI26-.LCFI25
 1544 0152 0D       		.byte	0xd
 1545 0153 07       		.uleb128 0x7
 1546              		.align	2
 1547              	.LEFDE14:
 1548              		.text
 1549              	.Letext0:
 1550              		.section	.debug_loc,"",%progbits
 1551              	.Ldebug_loc0:
 1552              	.LLST0:
ARM GAS  /tmp/ccEnCxJF.s 			page 43


 1553 0000 00000000 		.4byte	.LFB0
 1554 0004 02000000 		.4byte	.LCFI0
 1555 0008 0100     		.2byte	0x1
 1556 000a 5D       		.byte	0x5d
 1557 000b 02000000 		.4byte	.LCFI0
 1558 000f 04000000 		.4byte	.LCFI1
 1559 0013 0200     		.2byte	0x2
 1560 0015 7D       		.byte	0x7d
 1561 0016 04       		.sleb128 4
 1562 0017 04000000 		.4byte	.LCFI1
 1563 001b 06000000 		.4byte	.LCFI2
 1564 001f 0200     		.2byte	0x2
 1565 0021 7D       		.byte	0x7d
 1566 0022 10       		.sleb128 16
 1567 0023 06000000 		.4byte	.LCFI2
 1568 0027 30000000 		.4byte	.LFE0
 1569 002b 0200     		.2byte	0x2
 1570 002d 77       		.byte	0x77
 1571 002e 10       		.sleb128 16
 1572 002f 00000000 		.4byte	0x0
 1573 0033 00000000 		.4byte	0x0
 1574              	.LLST1:
 1575 0037 00000000 		.4byte	.LFB1
 1576 003b 04000000 		.4byte	.LCFI3
 1577 003f 0100     		.2byte	0x1
 1578 0041 5D       		.byte	0x5d
 1579 0042 04000000 		.4byte	.LCFI3
 1580 0046 06000000 		.4byte	.LCFI4
 1581 004a 0200     		.2byte	0x2
 1582 004c 7D       		.byte	0x7d
 1583 004d 18       		.sleb128 24
 1584 004e 06000000 		.4byte	.LCFI4
 1585 0052 08000000 		.4byte	.LCFI5
 1586 0056 0200     		.2byte	0x2
 1587 0058 7D       		.byte	0x7d
 1588 0059 28       		.sleb128 40
 1589 005a 08000000 		.4byte	.LCFI5
 1590 005e D2000000 		.4byte	.LFE1
 1591 0062 0200     		.2byte	0x2
 1592 0064 77       		.byte	0x77
 1593 0065 28       		.sleb128 40
 1594 0066 00000000 		.4byte	0x0
 1595 006a 00000000 		.4byte	0x0
 1596              	.LLST2:
 1597 006e 00000000 		.4byte	.LFB2
 1598 0072 04000000 		.4byte	.LCFI6
 1599 0076 0100     		.2byte	0x1
 1600 0078 5D       		.byte	0x5d
 1601 0079 04000000 		.4byte	.LCFI6
 1602 007d 06000000 		.4byte	.LCFI7
 1603 0081 0200     		.2byte	0x2
 1604 0083 7D       		.byte	0x7d
 1605 0084 1C       		.sleb128 28
 1606 0085 06000000 		.4byte	.LCFI7
 1607 0089 08000000 		.4byte	.LCFI8
 1608 008d 0300     		.2byte	0x3
 1609 008f 7D       		.byte	0x7d
ARM GAS  /tmp/ccEnCxJF.s 			page 44


 1610 0090 C000     		.sleb128 64
 1611 0092 08000000 		.4byte	.LCFI8
 1612 0096 F6000000 		.4byte	.LFE2
 1613 009a 0300     		.2byte	0x3
 1614 009c 77       		.byte	0x77
 1615 009d C000     		.sleb128 64
 1616 009f 00000000 		.4byte	0x0
 1617 00a3 00000000 		.4byte	0x0
 1618              	.LLST3:
 1619 00a7 00000000 		.4byte	.LFB3
 1620 00ab 04000000 		.4byte	.LCFI9
 1621 00af 0100     		.2byte	0x1
 1622 00b1 5D       		.byte	0x5d
 1623 00b2 04000000 		.4byte	.LCFI9
 1624 00b6 06000000 		.4byte	.LCFI10
 1625 00ba 0200     		.2byte	0x2
 1626 00bc 7D       		.byte	0x7d
 1627 00bd 18       		.sleb128 24
 1628 00be 06000000 		.4byte	.LCFI10
 1629 00c2 08000000 		.4byte	.LCFI11
 1630 00c6 0300     		.2byte	0x3
 1631 00c8 7D       		.byte	0x7d
 1632 00c9 C000     		.sleb128 64
 1633 00cb 08000000 		.4byte	.LCFI11
 1634 00cf 1C020000 		.4byte	.LFE3
 1635 00d3 0200     		.2byte	0x2
 1636 00d5 77       		.byte	0x77
 1637 00d6 30       		.sleb128 48
 1638 00d7 00000000 		.4byte	0x0
 1639 00db 00000000 		.4byte	0x0
 1640              	.LLST4:
 1641 00df 00000000 		.4byte	.LFB4
 1642 00e3 02000000 		.4byte	.LCFI12
 1643 00e7 0100     		.2byte	0x1
 1644 00e9 5D       		.byte	0x5d
 1645 00ea 02000000 		.4byte	.LCFI12
 1646 00ee 04000000 		.4byte	.LCFI13
 1647 00f2 0200     		.2byte	0x2
 1648 00f4 7D       		.byte	0x7d
 1649 00f5 10       		.sleb128 16
 1650 00f6 04000000 		.4byte	.LCFI13
 1651 00fa 06000000 		.4byte	.LCFI14
 1652 00fe 0200     		.2byte	0x2
 1653 0100 7D       		.byte	0x7d
 1654 0101 18       		.sleb128 24
 1655 0102 06000000 		.4byte	.LCFI14
 1656 0106 08000000 		.4byte	.LCFI15
 1657 010a 0200     		.2byte	0x2
 1658 010c 7D       		.byte	0x7d
 1659 010d 20       		.sleb128 32
 1660 010e 08000000 		.4byte	.LCFI15
 1661 0112 2C000000 		.4byte	.LFE4
 1662 0116 0200     		.2byte	0x2
 1663 0118 77       		.byte	0x77
 1664 0119 20       		.sleb128 32
 1665 011a 00000000 		.4byte	0x0
 1666 011e 00000000 		.4byte	0x0
ARM GAS  /tmp/ccEnCxJF.s 			page 45


 1667              	.LLST5:
 1668 0122 00000000 		.4byte	.LFB5
 1669 0126 02000000 		.4byte	.LCFI16
 1670 012a 0100     		.2byte	0x1
 1671 012c 5D       		.byte	0x5d
 1672 012d 02000000 		.4byte	.LCFI16
 1673 0131 04000000 		.4byte	.LCFI17
 1674 0135 0200     		.2byte	0x2
 1675 0137 7D       		.byte	0x7d
 1676 0138 0C       		.sleb128 12
 1677 0139 04000000 		.4byte	.LCFI17
 1678 013d 06000000 		.4byte	.LCFI18
 1679 0141 0200     		.2byte	0x2
 1680 0143 7D       		.byte	0x7d
 1681 0144 14       		.sleb128 20
 1682 0145 06000000 		.4byte	.LCFI18
 1683 0149 08000000 		.4byte	.LCFI19
 1684 014d 0200     		.2byte	0x2
 1685 014f 7D       		.byte	0x7d
 1686 0150 28       		.sleb128 40
 1687 0151 08000000 		.4byte	.LCFI19
 1688 0155 30000000 		.4byte	.LFE5
 1689 0159 0200     		.2byte	0x2
 1690 015b 77       		.byte	0x77
 1691 015c 28       		.sleb128 40
 1692 015d 00000000 		.4byte	0x0
 1693 0161 00000000 		.4byte	0x0
 1694              	.LLST6:
 1695 0165 00000000 		.4byte	.LFB6
 1696 0169 02000000 		.4byte	.LCFI20
 1697 016d 0100     		.2byte	0x1
 1698 016f 5D       		.byte	0x5d
 1699 0170 02000000 		.4byte	.LCFI20
 1700 0174 04000000 		.4byte	.LCFI21
 1701 0178 0200     		.2byte	0x2
 1702 017a 7D       		.byte	0x7d
 1703 017b 08       		.sleb128 8
 1704 017c 04000000 		.4byte	.LCFI21
 1705 0180 06000000 		.4byte	.LCFI22
 1706 0184 0200     		.2byte	0x2
 1707 0186 7D       		.byte	0x7d
 1708 0187 10       		.sleb128 16
 1709 0188 06000000 		.4byte	.LCFI22
 1710 018c 08000000 		.4byte	.LCFI23
 1711 0190 0200     		.2byte	0x2
 1712 0192 7D       		.byte	0x7d
 1713 0193 20       		.sleb128 32
 1714 0194 08000000 		.4byte	.LCFI23
 1715 0198 32000000 		.4byte	.LFE6
 1716 019c 0200     		.2byte	0x2
 1717 019e 77       		.byte	0x77
 1718 019f 20       		.sleb128 32
 1719 01a0 00000000 		.4byte	0x0
 1720 01a4 00000000 		.4byte	0x0
 1721              	.LLST7:
 1722 01a8 00000000 		.4byte	.LFB7
 1723 01ac 02000000 		.4byte	.LCFI24
ARM GAS  /tmp/ccEnCxJF.s 			page 46


 1724 01b0 0100     		.2byte	0x1
 1725 01b2 5D       		.byte	0x5d
 1726 01b3 02000000 		.4byte	.LCFI24
 1727 01b7 04000000 		.4byte	.LCFI25
 1728 01bb 0200     		.2byte	0x2
 1729 01bd 7D       		.byte	0x7d
 1730 01be 04       		.sleb128 4
 1731 01bf 04000000 		.4byte	.LCFI25
 1732 01c3 06000000 		.4byte	.LCFI26
 1733 01c7 0200     		.2byte	0x2
 1734 01c9 7D       		.byte	0x7d
 1735 01ca 18       		.sleb128 24
 1736 01cb 06000000 		.4byte	.LCFI26
 1737 01cf 1C000000 		.4byte	.LFE7
 1738 01d3 0200     		.2byte	0x2
 1739 01d5 77       		.byte	0x77
 1740 01d6 18       		.sleb128 24
 1741 01d7 00000000 		.4byte	0x0
 1742 01db 00000000 		.4byte	0x0
 1743              		.section	.debug_info
 1744 0000 E8030000 		.4byte	0x3e8
 1745 0004 0200     		.2byte	0x2
 1746 0006 00000000 		.4byte	.Ldebug_abbrev0
 1747 000a 04       		.byte	0x4
 1748 000b 01       		.uleb128 0x1
 1749 000c B2000000 		.4byte	.LASF18
 1750 0010 01       		.byte	0x1
 1751 0011 E5000000 		.4byte	.LASF19
 1752 0015 21000000 		.4byte	.LASF20
 1753 0019 00000000 		.4byte	0x0
 1754 001d 00000000 		.4byte	0x0
 1755 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1756 0025 00000000 		.4byte	.Ldebug_line0
 1757 0029 00000000 		.4byte	.Ldebug_macinfo0
 1758 002d 02       		.uleb128 0x2
 1759 002e 0A010000 		.4byte	.LASF0
 1760 0032 02       		.byte	0x2
 1761 0033 28       		.byte	0x28
 1762 0034 38000000 		.4byte	0x38
 1763 0038 03       		.uleb128 0x3
 1764 0039 BE000000 		.4byte	.LASF21
 1765 003d 04       		.byte	0x4
 1766 003e 50000000 		.4byte	0x50
 1767 0042 04       		.uleb128 0x4
 1768 0043 37010000 		.4byte	.LASF22
 1769 0047 50000000 		.4byte	0x50
 1770 004b 02       		.byte	0x2
 1771 004c 23       		.byte	0x23
 1772 004d 00       		.uleb128 0x0
 1773 004e 01       		.byte	0x1
 1774 004f 00       		.byte	0x0
 1775 0050 05       		.uleb128 0x5
 1776 0051 04       		.byte	0x4
 1777 0052 02       		.uleb128 0x2
 1778 0053 D1000000 		.4byte	.LASF1
 1779 0057 02       		.byte	0x2
 1780 0058 66       		.byte	0x66
ARM GAS  /tmp/ccEnCxJF.s 			page 47


 1781 0059 2D000000 		.4byte	0x2d
 1782 005d 06       		.uleb128 0x6
 1783 005e 17000000 		.4byte	.LASF23
 1784 0062 01       		.byte	0x1
 1785 0063 20       		.byte	0x20
 1786 0064 01       		.byte	0x1
 1787 0065 00000000 		.4byte	.LFB0
 1788 0069 30000000 		.4byte	.LFE0
 1789 006d 00000000 		.4byte	.LLST0
 1790 0071 90000000 		.4byte	0x90
 1791 0075 07       		.uleb128 0x7
 1792 0076 73747200 		.ascii	"str\000"
 1793 007a 01       		.byte	0x1
 1794 007b 20       		.byte	0x20
 1795 007c 90000000 		.4byte	0x90
 1796 0080 02       		.byte	0x2
 1797 0081 91       		.byte	0x91
 1798 0082 74       		.sleb128 -12
 1799 0083 07       		.uleb128 0x7
 1800 0084 6300     		.ascii	"c\000"
 1801 0086 01       		.byte	0x1
 1802 0087 20       		.byte	0x20
 1803 0088 A3000000 		.4byte	0xa3
 1804 008c 02       		.byte	0x2
 1805 008d 91       		.byte	0x91
 1806 008e 70       		.sleb128 -16
 1807 008f 00       		.byte	0x0
 1808 0090 08       		.uleb128 0x8
 1809 0091 04       		.byte	0x4
 1810 0092 96000000 		.4byte	0x96
 1811 0096 08       		.uleb128 0x8
 1812 0097 04       		.byte	0x4
 1813 0098 9C000000 		.4byte	0x9c
 1814 009c 09       		.uleb128 0x9
 1815 009d 01       		.byte	0x1
 1816 009e 08       		.byte	0x8
 1817 009f 32010000 		.4byte	.LASF2
 1818 00a3 0A       		.uleb128 0xa
 1819 00a4 04       		.byte	0x4
 1820 00a5 05       		.byte	0x5
 1821 00a6 696E7400 		.ascii	"int\000"
 1822 00aa 0B       		.uleb128 0xb
 1823 00ab 2B010000 		.4byte	.LASF6
 1824 00af 01       		.byte	0x1
 1825 00b0 31       		.byte	0x31
 1826 00b1 01       		.byte	0x1
 1827 00b2 A3000000 		.4byte	0xa3
 1828 00b6 00000000 		.4byte	.LFB1
 1829 00ba D2000000 		.4byte	.LFE1
 1830 00be 37000000 		.4byte	.LLST1
 1831 00c2 3C010000 		.4byte	0x13c
 1832 00c6 07       		.uleb128 0x7
 1833 00c7 6F757400 		.ascii	"out\000"
 1834 00cb 01       		.byte	0x1
 1835 00cc 31       		.byte	0x31
 1836 00cd 90000000 		.4byte	0x90
 1837 00d1 02       		.byte	0x2
ARM GAS  /tmp/ccEnCxJF.s 			page 48


 1838 00d2 91       		.byte	0x91
 1839 00d3 64       		.sleb128 -28
 1840 00d4 0C       		.uleb128 0xc
 1841 00d5 08000000 		.4byte	.LASF3
 1842 00d9 01       		.byte	0x1
 1843 00da 31       		.byte	0x31
 1844 00db 3C010000 		.4byte	0x13c
 1845 00df 02       		.byte	0x2
 1846 00e0 91       		.byte	0x91
 1847 00e1 60       		.sleb128 -32
 1848 00e2 0C       		.uleb128 0xc
 1849 00e3 D9000000 		.4byte	.LASF4
 1850 00e7 01       		.byte	0x1
 1851 00e8 31       		.byte	0x31
 1852 00e9 A3000000 		.4byte	0xa3
 1853 00ed 02       		.byte	0x2
 1854 00ee 91       		.byte	0x91
 1855 00ef 5C       		.sleb128 -36
 1856 00f0 07       		.uleb128 0x7
 1857 00f1 70616400 		.ascii	"pad\000"
 1858 00f5 01       		.byte	0x1
 1859 00f6 31       		.byte	0x31
 1860 00f7 A3000000 		.4byte	0xa3
 1861 00fb 02       		.byte	0x2
 1862 00fc 91       		.byte	0x91
 1863 00fd 58       		.sleb128 -40
 1864 00fe 0D       		.uleb128 0xd
 1865 00ff 706300   		.ascii	"pc\000"
 1866 0102 01       		.byte	0x1
 1867 0103 33       		.byte	0x33
 1868 0104 A3000000 		.4byte	0xa3
 1869 0108 01       		.byte	0x1
 1870 0109 54       		.byte	0x54
 1871 010a 0E       		.uleb128 0xe
 1872 010b 0F000000 		.4byte	.LASF5
 1873 010f 01       		.byte	0x1
 1874 0110 33       		.byte	0x33
 1875 0111 A3000000 		.4byte	0xa3
 1876 0115 01       		.byte	0x1
 1877 0116 56       		.byte	0x56
 1878 0117 0F       		.uleb128 0xf
 1879 0118 1E000000 		.4byte	.LBB2
 1880 011c 5C000000 		.4byte	.LBE2
 1881 0120 0D       		.uleb128 0xd
 1882 0121 6C656E00 		.ascii	"len\000"
 1883 0125 01       		.byte	0x1
 1884 0126 36       		.byte	0x36
 1885 0127 A3000000 		.4byte	0xa3
 1886 012b 01       		.byte	0x1
 1887 012c 55       		.byte	0x55
 1888 012d 0D       		.uleb128 0xd
 1889 012e 70747200 		.ascii	"ptr\000"
 1890 0132 01       		.byte	0x1
 1891 0133 37       		.byte	0x37
 1892 0134 3C010000 		.4byte	0x13c
 1893 0138 01       		.byte	0x1
 1894 0139 58       		.byte	0x58
ARM GAS  /tmp/ccEnCxJF.s 			page 49


 1895 013a 00       		.byte	0x0
 1896 013b 00       		.byte	0x0
 1897 013c 08       		.uleb128 0x8
 1898 013d 04       		.byte	0x4
 1899 013e 42010000 		.4byte	0x142
 1900 0142 10       		.uleb128 0x10
 1901 0143 9C000000 		.4byte	0x9c
 1902 0147 0B       		.uleb128 0xb
 1903 0148 03010000 		.4byte	.LASF7
 1904 014c 01       		.byte	0x1
 1905 014d 52       		.byte	0x52
 1906 014e 01       		.byte	0x1
 1907 014f A3000000 		.4byte	0xa3
 1908 0153 00000000 		.4byte	.LFB2
 1909 0157 F6000000 		.4byte	.LFE2
 1910 015b 6E000000 		.4byte	.LLST2
 1911 015f 09020000 		.4byte	0x209
 1912 0163 07       		.uleb128 0x7
 1913 0164 6F757400 		.ascii	"out\000"
 1914 0168 01       		.byte	0x1
 1915 0169 52       		.byte	0x52
 1916 016a 90000000 		.4byte	0x90
 1917 016e 02       		.byte	0x2
 1918 016f 91       		.byte	0x91
 1919 0170 4C       		.sleb128 -52
 1920 0171 07       		.uleb128 0x7
 1921 0172 6900     		.ascii	"i\000"
 1922 0174 01       		.byte	0x1
 1923 0175 52       		.byte	0x52
 1924 0176 A3000000 		.4byte	0xa3
 1925 017a 02       		.byte	0x2
 1926 017b 91       		.byte	0x91
 1927 017c 48       		.sleb128 -56
 1928 017d 07       		.uleb128 0x7
 1929 017e 6200     		.ascii	"b\000"
 1930 0180 01       		.byte	0x1
 1931 0181 52       		.byte	0x52
 1932 0182 A3000000 		.4byte	0xa3
 1933 0186 02       		.byte	0x2
 1934 0187 91       		.byte	0x91
 1935 0188 44       		.sleb128 -60
 1936 0189 07       		.uleb128 0x7
 1937 018a 736700   		.ascii	"sg\000"
 1938 018d 01       		.byte	0x1
 1939 018e 52       		.byte	0x52
 1940 018f A3000000 		.4byte	0xa3
 1941 0193 02       		.byte	0x2
 1942 0194 91       		.byte	0x91
 1943 0195 40       		.sleb128 -64
 1944 0196 0C       		.uleb128 0xc
 1945 0197 D9000000 		.4byte	.LASF4
 1946 019b 01       		.byte	0x1
 1947 019c 52       		.byte	0x52
 1948 019d A3000000 		.4byte	0xa3
 1949 01a1 02       		.byte	0x2
 1950 01a2 91       		.byte	0x91
 1951 01a3 00       		.sleb128 0
ARM GAS  /tmp/ccEnCxJF.s 			page 50


 1952 01a4 07       		.uleb128 0x7
 1953 01a5 70616400 		.ascii	"pad\000"
 1954 01a9 01       		.byte	0x1
 1955 01aa 52       		.byte	0x52
 1956 01ab A3000000 		.4byte	0xa3
 1957 01af 02       		.byte	0x2
 1958 01b0 91       		.byte	0x91
 1959 01b1 04       		.sleb128 4
 1960 01b2 0C       		.uleb128 0xc
 1961 01b3 00000000 		.4byte	.LASF8
 1962 01b7 01       		.byte	0x1
 1963 01b8 52       		.byte	0x52
 1964 01b9 A3000000 		.4byte	0xa3
 1965 01bd 02       		.byte	0x2
 1966 01be 91       		.byte	0x91
 1967 01bf 08       		.sleb128 8
 1968 01c0 0E       		.uleb128 0xe
 1969 01c1 94000000 		.4byte	.LASF9
 1970 01c5 01       		.byte	0x1
 1971 01c6 54       		.byte	0x54
 1972 01c7 09020000 		.4byte	0x209
 1973 01cb 02       		.byte	0x2
 1974 01cc 91       		.byte	0x91
 1975 01cd 54       		.sleb128 -44
 1976 01ce 0D       		.uleb128 0xd
 1977 01cf 7300     		.ascii	"s\000"
 1978 01d1 01       		.byte	0x1
 1979 01d2 55       		.byte	0x55
 1980 01d3 96000000 		.4byte	0x96
 1981 01d7 01       		.byte	0x1
 1982 01d8 54       		.byte	0x54
 1983 01d9 0D       		.uleb128 0xd
 1984 01da 7400     		.ascii	"t\000"
 1985 01dc 01       		.byte	0x1
 1986 01dd 56       		.byte	0x56
 1987 01de A3000000 		.4byte	0xa3
 1988 01e2 01       		.byte	0x1
 1989 01e3 56       		.byte	0x56
 1990 01e4 0D       		.uleb128 0xd
 1991 01e5 6E656700 		.ascii	"neg\000"
 1992 01e9 01       		.byte	0x1
 1993 01ea 56       		.byte	0x56
 1994 01eb A3000000 		.4byte	0xa3
 1995 01ef 01       		.byte	0x1
 1996 01f0 5A       		.byte	0x5a
 1997 01f1 0D       		.uleb128 0xd
 1998 01f2 706300   		.ascii	"pc\000"
 1999 01f5 01       		.byte	0x1
 2000 01f6 56       		.byte	0x56
 2001 01f7 A3000000 		.4byte	0xa3
 2002 01fb 01       		.byte	0x1
 2003 01fc 58       		.byte	0x58
 2004 01fd 0D       		.uleb128 0xd
 2005 01fe 7500     		.ascii	"u\000"
 2006 0200 01       		.byte	0x1
 2007 0201 57       		.byte	0x57
 2008 0202 1C020000 		.4byte	0x21c
ARM GAS  /tmp/ccEnCxJF.s 			page 51


 2009 0206 01       		.byte	0x1
 2010 0207 55       		.byte	0x55
 2011 0208 00       		.byte	0x0
 2012 0209 11       		.uleb128 0x11
 2013 020a 9C000000 		.4byte	0x9c
 2014 020e 19020000 		.4byte	0x219
 2015 0212 12       		.uleb128 0x12
 2016 0213 19020000 		.4byte	0x219
 2017 0217 0B       		.byte	0xb
 2018 0218 00       		.byte	0x0
 2019 0219 13       		.uleb128 0x13
 2020 021a 04       		.byte	0x4
 2021 021b 07       		.byte	0x7
 2022 021c 09       		.uleb128 0x9
 2023 021d 04       		.byte	0x4
 2024 021e 07       		.byte	0x7
 2025 021f 19010000 		.4byte	.LASF10
 2026 0223 0B       		.uleb128 0xb
 2027 0224 9E000000 		.4byte	.LASF11
 2028 0228 01       		.byte	0x1
 2029 0229 7D       		.byte	0x7d
 2030 022a 01       		.byte	0x1
 2031 022b A3000000 		.4byte	0xa3
 2032 022f 00000000 		.4byte	.LFB3
 2033 0233 1C020000 		.4byte	.LFE3
 2034 0237 A7000000 		.4byte	.LLST3
 2035 023b BE020000 		.4byte	0x2be
 2036 023f 07       		.uleb128 0x7
 2037 0240 6F757400 		.ascii	"out\000"
 2038 0244 01       		.byte	0x1
 2039 0245 7D       		.byte	0x7d
 2040 0246 90000000 		.4byte	0x90
 2041 024a 02       		.byte	0x2
 2042 024b 91       		.byte	0x91
 2043 024c 5C       		.sleb128 -36
 2044 024d 0C       		.uleb128 0xc
 2045 024e F5000000 		.4byte	.LASF12
 2046 0252 01       		.byte	0x1
 2047 0253 7D       		.byte	0x7d
 2048 0254 3C010000 		.4byte	0x13c
 2049 0258 02       		.byte	0x2
 2050 0259 91       		.byte	0x91
 2051 025a 58       		.sleb128 -40
 2052 025b 0C       		.uleb128 0xc
 2053 025c 26010000 		.4byte	.LASF13
 2054 0260 01       		.byte	0x1
 2055 0261 7D       		.byte	0x7d
 2056 0262 52000000 		.4byte	0x52
 2057 0266 02       		.byte	0x2
 2058 0267 91       		.byte	0x91
 2059 0268 54       		.sleb128 -44
 2060 0269 0E       		.uleb128 0xe
 2061 026a D9000000 		.4byte	.LASF4
 2062 026e 01       		.byte	0x1
 2063 026f 7F       		.byte	0x7f
 2064 0270 A3000000 		.4byte	0xa3
 2065 0274 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 52


 2066 0275 55       		.byte	0x55
 2067 0276 0D       		.uleb128 0xd
 2068 0277 70616400 		.ascii	"pad\000"
 2069 027b 01       		.byte	0x1
 2070 027c 7F       		.byte	0x7f
 2071 027d A3000000 		.4byte	0xa3
 2072 0281 01       		.byte	0x1
 2073 0282 56       		.byte	0x56
 2074 0283 0D       		.uleb128 0xd
 2075 0284 706300   		.ascii	"pc\000"
 2076 0287 01       		.byte	0x1
 2077 0288 80       		.byte	0x80
 2078 0289 A3000000 		.4byte	0xa3
 2079 028d 01       		.byte	0x1
 2080 028e 54       		.byte	0x54
 2081 028f 0D       		.uleb128 0xd
 2082 0290 73637200 		.ascii	"scr\000"
 2083 0294 01       		.byte	0x1
 2084 0295 81       		.byte	0x81
 2085 0296 BE020000 		.4byte	0x2be
 2086 029a 02       		.byte	0x2
 2087 029b 91       		.byte	0x91
 2088 029c 64       		.sleb128 -28
 2089 029d 14       		.uleb128 0x14
 2090 029e 6F757400 		.ascii	"out\000"
 2091 02a2 01       		.byte	0x1
 2092 02a3 B3       		.byte	0xb3
 2093 02a4 D4010000 		.4byte	.L31
 2094 02a8 0F       		.uleb128 0xf
 2095 02a9 A8000000 		.4byte	.LBB3
 2096 02ad D8000000 		.4byte	.LBE3
 2097 02b1 0D       		.uleb128 0xd
 2098 02b2 7300     		.ascii	"s\000"
 2099 02b4 01       		.byte	0x1
 2100 02b5 96       		.byte	0x96
 2101 02b6 96000000 		.4byte	0x96
 2102 02ba 01       		.byte	0x1
 2103 02bb 58       		.byte	0x58
 2104 02bc 00       		.byte	0x0
 2105 02bd 00       		.byte	0x0
 2106 02be 11       		.uleb128 0x11
 2107 02bf 9C000000 		.4byte	0x9c
 2108 02c3 CE020000 		.4byte	0x2ce
 2109 02c7 12       		.uleb128 0x12
 2110 02c8 19020000 		.4byte	0x219
 2111 02cc 01       		.byte	0x1
 2112 02cd 00       		.byte	0x0
 2113 02ce 15       		.uleb128 0x15
 2114 02cf 01       		.byte	0x1
 2115 02d0 FC000000 		.4byte	.LASF14
 2116 02d4 01       		.byte	0x1
 2117 02d5 BD       		.byte	0xbd
 2118 02d6 01       		.byte	0x1
 2119 02d7 A3000000 		.4byte	0xa3
 2120 02db 00000000 		.4byte	.LFB4
 2121 02df 2C000000 		.4byte	.LFE4
 2122 02e3 DF000000 		.4byte	.LLST4
ARM GAS  /tmp/ccEnCxJF.s 			page 53


 2123 02e7 09030000 		.4byte	0x309
 2124 02eb 0C       		.uleb128 0xc
 2125 02ec F5000000 		.4byte	.LASF12
 2126 02f0 01       		.byte	0x1
 2127 02f1 BD       		.byte	0xbd
 2128 02f2 3C010000 		.4byte	0x13c
 2129 02f6 02       		.byte	0x2
 2130 02f7 91       		.byte	0x91
 2131 02f8 70       		.sleb128 -16
 2132 02f9 16       		.uleb128 0x16
 2133 02fa 0E       		.uleb128 0xe
 2134 02fb 26010000 		.4byte	.LASF13
 2135 02ff 01       		.byte	0x1
 2136 0300 BF       		.byte	0xbf
 2137 0301 52000000 		.4byte	0x52
 2138 0305 02       		.byte	0x2
 2139 0306 91       		.byte	0x91
 2140 0307 64       		.sleb128 -28
 2141 0308 00       		.byte	0x0
 2142 0309 15       		.uleb128 0x15
 2143 030a 01       		.byte	0x1
 2144 030b A4000000 		.4byte	.LASF15
 2145 030f 01       		.byte	0x1
 2146 0310 C5       		.byte	0xc5
 2147 0311 01       		.byte	0x1
 2148 0312 A3000000 		.4byte	0xa3
 2149 0316 00000000 		.4byte	.LFB5
 2150 031a 30000000 		.4byte	.LFE5
 2151 031e 22010000 		.4byte	.LLST5
 2152 0322 52030000 		.4byte	0x352
 2153 0326 07       		.uleb128 0x7
 2154 0327 6F757400 		.ascii	"out\000"
 2155 032b 01       		.byte	0x1
 2156 032c C5       		.byte	0xc5
 2157 032d 96000000 		.4byte	0x96
 2158 0331 02       		.byte	0x2
 2159 0332 91       		.byte	0x91
 2160 0333 5C       		.sleb128 -36
 2161 0334 0C       		.uleb128 0xc
 2162 0335 F5000000 		.4byte	.LASF12
 2163 0339 01       		.byte	0x1
 2164 033a C5       		.byte	0xc5
 2165 033b 3C010000 		.4byte	0x13c
 2166 033f 02       		.byte	0x2
 2167 0340 91       		.byte	0x91
 2168 0341 74       		.sleb128 -12
 2169 0342 16       		.uleb128 0x16
 2170 0343 0E       		.uleb128 0xe
 2171 0344 26010000 		.4byte	.LASF13
 2172 0348 01       		.byte	0x1
 2173 0349 C7       		.byte	0xc7
 2174 034a 52000000 		.4byte	0x52
 2175 034e 02       		.byte	0x2
 2176 034f 91       		.byte	0x91
 2177 0350 64       		.sleb128 -28
 2178 0351 00       		.byte	0x0
 2179 0352 15       		.uleb128 0x15
ARM GAS  /tmp/ccEnCxJF.s 			page 54


 2180 0353 01       		.byte	0x1
 2181 0354 C8000000 		.4byte	.LASF16
 2182 0358 01       		.byte	0x1
 2183 0359 CE       		.byte	0xce
 2184 035a 01       		.byte	0x1
 2185 035b A3000000 		.4byte	0xa3
 2186 035f 00000000 		.4byte	.LFB6
 2187 0363 32000000 		.4byte	.LFE6
 2188 0367 65010000 		.4byte	.LLST6
 2189 036b A9030000 		.4byte	0x3a9
 2190 036f 07       		.uleb128 0x7
 2191 0370 62756600 		.ascii	"buf\000"
 2192 0374 01       		.byte	0x1
 2193 0375 CE       		.byte	0xce
 2194 0376 96000000 		.4byte	0x96
 2195 037a 02       		.byte	0x2
 2196 037b 91       		.byte	0x91
 2197 037c 64       		.sleb128 -28
 2198 037d 0C       		.uleb128 0xc
 2199 037e DF000000 		.4byte	.LASF17
 2200 0382 01       		.byte	0x1
 2201 0383 CE       		.byte	0xce
 2202 0384 1C020000 		.4byte	0x21c
 2203 0388 02       		.byte	0x2
 2204 0389 91       		.byte	0x91
 2205 038a 60       		.sleb128 -32
 2206 038b 0C       		.uleb128 0xc
 2207 038c F5000000 		.4byte	.LASF12
 2208 0390 01       		.byte	0x1
 2209 0391 CE       		.byte	0xce
 2210 0392 3C010000 		.4byte	0x13c
 2211 0396 02       		.byte	0x2
 2212 0397 91       		.byte	0x91
 2213 0398 78       		.sleb128 -8
 2214 0399 16       		.uleb128 0x16
 2215 039a 0E       		.uleb128 0xe
 2216 039b 26010000 		.4byte	.LASF13
 2217 039f 01       		.byte	0x1
 2218 03a0 D0       		.byte	0xd0
 2219 03a1 52000000 		.4byte	0x52
 2220 03a5 02       		.byte	0x2
 2221 03a6 91       		.byte	0x91
 2222 03a7 6C       		.sleb128 -20
 2223 03a8 00       		.byte	0x0
 2224 03a9 17       		.uleb128 0x17
 2225 03aa 01       		.byte	0x1
 2226 03ab AC000000 		.4byte	.LASF24
 2227 03af 01       		.byte	0x1
 2228 03b0 1E01     		.2byte	0x11e
 2229 03b2 01       		.byte	0x1
 2230 03b3 A3000000 		.4byte	0xa3
 2231 03b7 00000000 		.4byte	.LFB7
 2232 03bb 1C000000 		.4byte	.LFE7
 2233 03bf A8010000 		.4byte	.LLST7
 2234 03c3 18       		.uleb128 0x18
 2235 03c4 6900     		.ascii	"i\000"
 2236 03c6 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 55


 2237 03c7 1E01     		.2byte	0x11e
 2238 03c9 A3000000 		.4byte	0xa3
 2239 03cd 02       		.byte	0x2
 2240 03ce 91       		.byte	0x91
 2241 03cf 74       		.sleb128 -12
 2242 03d0 18       		.uleb128 0x18
 2243 03d1 6300     		.ascii	"c\000"
 2244 03d3 01       		.byte	0x1
 2245 03d4 1E01     		.2byte	0x11e
 2246 03d6 96000000 		.4byte	0x96
 2247 03da 02       		.byte	0x2
 2248 03db 91       		.byte	0x91
 2249 03dc 70       		.sleb128 -16
 2250 03dd 18       		.uleb128 0x18
 2251 03de 6E00     		.ascii	"n\000"
 2252 03e0 01       		.byte	0x1
 2253 03e1 1E01     		.2byte	0x11e
 2254 03e3 A3000000 		.4byte	0xa3
 2255 03e7 02       		.byte	0x2
 2256 03e8 91       		.byte	0x91
 2257 03e9 6C       		.sleb128 -20
 2258 03ea 00       		.byte	0x0
 2259 03eb 00       		.byte	0x0
 2260              		.section	.debug_abbrev
 2261 0000 01       		.uleb128 0x1
 2262 0001 11       		.uleb128 0x11
 2263 0002 01       		.byte	0x1
 2264 0003 25       		.uleb128 0x25
 2265 0004 0E       		.uleb128 0xe
 2266 0005 13       		.uleb128 0x13
 2267 0006 0B       		.uleb128 0xb
 2268 0007 03       		.uleb128 0x3
 2269 0008 0E       		.uleb128 0xe
 2270 0009 1B       		.uleb128 0x1b
 2271 000a 0E       		.uleb128 0xe
 2272 000b 11       		.uleb128 0x11
 2273 000c 01       		.uleb128 0x1
 2274 000d 52       		.uleb128 0x52
 2275 000e 01       		.uleb128 0x1
 2276 000f 55       		.uleb128 0x55
 2277 0010 06       		.uleb128 0x6
 2278 0011 10       		.uleb128 0x10
 2279 0012 06       		.uleb128 0x6
 2280 0013 43       		.uleb128 0x43
 2281 0014 06       		.uleb128 0x6
 2282 0015 00       		.byte	0x0
 2283 0016 00       		.byte	0x0
 2284 0017 02       		.uleb128 0x2
 2285 0018 16       		.uleb128 0x16
 2286 0019 00       		.byte	0x0
 2287 001a 03       		.uleb128 0x3
 2288 001b 0E       		.uleb128 0xe
 2289 001c 3A       		.uleb128 0x3a
 2290 001d 0B       		.uleb128 0xb
 2291 001e 3B       		.uleb128 0x3b
 2292 001f 0B       		.uleb128 0xb
 2293 0020 49       		.uleb128 0x49
ARM GAS  /tmp/ccEnCxJF.s 			page 56


 2294 0021 13       		.uleb128 0x13
 2295 0022 00       		.byte	0x0
 2296 0023 00       		.byte	0x0
 2297 0024 03       		.uleb128 0x3
 2298 0025 13       		.uleb128 0x13
 2299 0026 01       		.byte	0x1
 2300 0027 03       		.uleb128 0x3
 2301 0028 0E       		.uleb128 0xe
 2302 0029 0B       		.uleb128 0xb
 2303 002a 0B       		.uleb128 0xb
 2304 002b 01       		.uleb128 0x1
 2305 002c 13       		.uleb128 0x13
 2306 002d 00       		.byte	0x0
 2307 002e 00       		.byte	0x0
 2308 002f 04       		.uleb128 0x4
 2309 0030 0D       		.uleb128 0xd
 2310 0031 00       		.byte	0x0
 2311 0032 03       		.uleb128 0x3
 2312 0033 0E       		.uleb128 0xe
 2313 0034 49       		.uleb128 0x49
 2314 0035 13       		.uleb128 0x13
 2315 0036 38       		.uleb128 0x38
 2316 0037 0A       		.uleb128 0xa
 2317 0038 34       		.uleb128 0x34
 2318 0039 0C       		.uleb128 0xc
 2319 003a 00       		.byte	0x0
 2320 003b 00       		.byte	0x0
 2321 003c 05       		.uleb128 0x5
 2322 003d 0F       		.uleb128 0xf
 2323 003e 00       		.byte	0x0
 2324 003f 0B       		.uleb128 0xb
 2325 0040 0B       		.uleb128 0xb
 2326 0041 00       		.byte	0x0
 2327 0042 00       		.byte	0x0
 2328 0043 06       		.uleb128 0x6
 2329 0044 2E       		.uleb128 0x2e
 2330 0045 01       		.byte	0x1
 2331 0046 03       		.uleb128 0x3
 2332 0047 0E       		.uleb128 0xe
 2333 0048 3A       		.uleb128 0x3a
 2334 0049 0B       		.uleb128 0xb
 2335 004a 3B       		.uleb128 0x3b
 2336 004b 0B       		.uleb128 0xb
 2337 004c 27       		.uleb128 0x27
 2338 004d 0C       		.uleb128 0xc
 2339 004e 11       		.uleb128 0x11
 2340 004f 01       		.uleb128 0x1
 2341 0050 12       		.uleb128 0x12
 2342 0051 01       		.uleb128 0x1
 2343 0052 40       		.uleb128 0x40
 2344 0053 06       		.uleb128 0x6
 2345 0054 01       		.uleb128 0x1
 2346 0055 13       		.uleb128 0x13
 2347 0056 00       		.byte	0x0
 2348 0057 00       		.byte	0x0
 2349 0058 07       		.uleb128 0x7
 2350 0059 05       		.uleb128 0x5
ARM GAS  /tmp/ccEnCxJF.s 			page 57


 2351 005a 00       		.byte	0x0
 2352 005b 03       		.uleb128 0x3
 2353 005c 08       		.uleb128 0x8
 2354 005d 3A       		.uleb128 0x3a
 2355 005e 0B       		.uleb128 0xb
 2356 005f 3B       		.uleb128 0x3b
 2357 0060 0B       		.uleb128 0xb
 2358 0061 49       		.uleb128 0x49
 2359 0062 13       		.uleb128 0x13
 2360 0063 02       		.uleb128 0x2
 2361 0064 0A       		.uleb128 0xa
 2362 0065 00       		.byte	0x0
 2363 0066 00       		.byte	0x0
 2364 0067 08       		.uleb128 0x8
 2365 0068 0F       		.uleb128 0xf
 2366 0069 00       		.byte	0x0
 2367 006a 0B       		.uleb128 0xb
 2368 006b 0B       		.uleb128 0xb
 2369 006c 49       		.uleb128 0x49
 2370 006d 13       		.uleb128 0x13
 2371 006e 00       		.byte	0x0
 2372 006f 00       		.byte	0x0
 2373 0070 09       		.uleb128 0x9
 2374 0071 24       		.uleb128 0x24
 2375 0072 00       		.byte	0x0
 2376 0073 0B       		.uleb128 0xb
 2377 0074 0B       		.uleb128 0xb
 2378 0075 3E       		.uleb128 0x3e
 2379 0076 0B       		.uleb128 0xb
 2380 0077 03       		.uleb128 0x3
 2381 0078 0E       		.uleb128 0xe
 2382 0079 00       		.byte	0x0
 2383 007a 00       		.byte	0x0
 2384 007b 0A       		.uleb128 0xa
 2385 007c 24       		.uleb128 0x24
 2386 007d 00       		.byte	0x0
 2387 007e 0B       		.uleb128 0xb
 2388 007f 0B       		.uleb128 0xb
 2389 0080 3E       		.uleb128 0x3e
 2390 0081 0B       		.uleb128 0xb
 2391 0082 03       		.uleb128 0x3
 2392 0083 08       		.uleb128 0x8
 2393 0084 00       		.byte	0x0
 2394 0085 00       		.byte	0x0
 2395 0086 0B       		.uleb128 0xb
 2396 0087 2E       		.uleb128 0x2e
 2397 0088 01       		.byte	0x1
 2398 0089 03       		.uleb128 0x3
 2399 008a 0E       		.uleb128 0xe
 2400 008b 3A       		.uleb128 0x3a
 2401 008c 0B       		.uleb128 0xb
 2402 008d 3B       		.uleb128 0x3b
 2403 008e 0B       		.uleb128 0xb
 2404 008f 27       		.uleb128 0x27
 2405 0090 0C       		.uleb128 0xc
 2406 0091 49       		.uleb128 0x49
 2407 0092 13       		.uleb128 0x13
ARM GAS  /tmp/ccEnCxJF.s 			page 58


 2408 0093 11       		.uleb128 0x11
 2409 0094 01       		.uleb128 0x1
 2410 0095 12       		.uleb128 0x12
 2411 0096 01       		.uleb128 0x1
 2412 0097 40       		.uleb128 0x40
 2413 0098 06       		.uleb128 0x6
 2414 0099 01       		.uleb128 0x1
 2415 009a 13       		.uleb128 0x13
 2416 009b 00       		.byte	0x0
 2417 009c 00       		.byte	0x0
 2418 009d 0C       		.uleb128 0xc
 2419 009e 05       		.uleb128 0x5
 2420 009f 00       		.byte	0x0
 2421 00a0 03       		.uleb128 0x3
 2422 00a1 0E       		.uleb128 0xe
 2423 00a2 3A       		.uleb128 0x3a
 2424 00a3 0B       		.uleb128 0xb
 2425 00a4 3B       		.uleb128 0x3b
 2426 00a5 0B       		.uleb128 0xb
 2427 00a6 49       		.uleb128 0x49
 2428 00a7 13       		.uleb128 0x13
 2429 00a8 02       		.uleb128 0x2
 2430 00a9 0A       		.uleb128 0xa
 2431 00aa 00       		.byte	0x0
 2432 00ab 00       		.byte	0x0
 2433 00ac 0D       		.uleb128 0xd
 2434 00ad 34       		.uleb128 0x34
 2435 00ae 00       		.byte	0x0
 2436 00af 03       		.uleb128 0x3
 2437 00b0 08       		.uleb128 0x8
 2438 00b1 3A       		.uleb128 0x3a
 2439 00b2 0B       		.uleb128 0xb
 2440 00b3 3B       		.uleb128 0x3b
 2441 00b4 0B       		.uleb128 0xb
 2442 00b5 49       		.uleb128 0x49
 2443 00b6 13       		.uleb128 0x13
 2444 00b7 02       		.uleb128 0x2
 2445 00b8 0A       		.uleb128 0xa
 2446 00b9 00       		.byte	0x0
 2447 00ba 00       		.byte	0x0
 2448 00bb 0E       		.uleb128 0xe
 2449 00bc 34       		.uleb128 0x34
 2450 00bd 00       		.byte	0x0
 2451 00be 03       		.uleb128 0x3
 2452 00bf 0E       		.uleb128 0xe
 2453 00c0 3A       		.uleb128 0x3a
 2454 00c1 0B       		.uleb128 0xb
 2455 00c2 3B       		.uleb128 0x3b
 2456 00c3 0B       		.uleb128 0xb
 2457 00c4 49       		.uleb128 0x49
 2458 00c5 13       		.uleb128 0x13
 2459 00c6 02       		.uleb128 0x2
 2460 00c7 0A       		.uleb128 0xa
 2461 00c8 00       		.byte	0x0
 2462 00c9 00       		.byte	0x0
 2463 00ca 0F       		.uleb128 0xf
 2464 00cb 0B       		.uleb128 0xb
ARM GAS  /tmp/ccEnCxJF.s 			page 59


 2465 00cc 01       		.byte	0x1
 2466 00cd 11       		.uleb128 0x11
 2467 00ce 01       		.uleb128 0x1
 2468 00cf 12       		.uleb128 0x12
 2469 00d0 01       		.uleb128 0x1
 2470 00d1 00       		.byte	0x0
 2471 00d2 00       		.byte	0x0
 2472 00d3 10       		.uleb128 0x10
 2473 00d4 26       		.uleb128 0x26
 2474 00d5 00       		.byte	0x0
 2475 00d6 49       		.uleb128 0x49
 2476 00d7 13       		.uleb128 0x13
 2477 00d8 00       		.byte	0x0
 2478 00d9 00       		.byte	0x0
 2479 00da 11       		.uleb128 0x11
 2480 00db 01       		.uleb128 0x1
 2481 00dc 01       		.byte	0x1
 2482 00dd 49       		.uleb128 0x49
 2483 00de 13       		.uleb128 0x13
 2484 00df 01       		.uleb128 0x1
 2485 00e0 13       		.uleb128 0x13
 2486 00e1 00       		.byte	0x0
 2487 00e2 00       		.byte	0x0
 2488 00e3 12       		.uleb128 0x12
 2489 00e4 21       		.uleb128 0x21
 2490 00e5 00       		.byte	0x0
 2491 00e6 49       		.uleb128 0x49
 2492 00e7 13       		.uleb128 0x13
 2493 00e8 2F       		.uleb128 0x2f
 2494 00e9 0B       		.uleb128 0xb
 2495 00ea 00       		.byte	0x0
 2496 00eb 00       		.byte	0x0
 2497 00ec 13       		.uleb128 0x13
 2498 00ed 24       		.uleb128 0x24
 2499 00ee 00       		.byte	0x0
 2500 00ef 0B       		.uleb128 0xb
 2501 00f0 0B       		.uleb128 0xb
 2502 00f1 3E       		.uleb128 0x3e
 2503 00f2 0B       		.uleb128 0xb
 2504 00f3 00       		.byte	0x0
 2505 00f4 00       		.byte	0x0
 2506 00f5 14       		.uleb128 0x14
 2507 00f6 0A       		.uleb128 0xa
 2508 00f7 00       		.byte	0x0
 2509 00f8 03       		.uleb128 0x3
 2510 00f9 08       		.uleb128 0x8
 2511 00fa 3A       		.uleb128 0x3a
 2512 00fb 0B       		.uleb128 0xb
 2513 00fc 3B       		.uleb128 0x3b
 2514 00fd 0B       		.uleb128 0xb
 2515 00fe 11       		.uleb128 0x11
 2516 00ff 01       		.uleb128 0x1
 2517 0100 00       		.byte	0x0
 2518 0101 00       		.byte	0x0
 2519 0102 15       		.uleb128 0x15
 2520 0103 2E       		.uleb128 0x2e
 2521 0104 01       		.byte	0x1
ARM GAS  /tmp/ccEnCxJF.s 			page 60


 2522 0105 3F       		.uleb128 0x3f
 2523 0106 0C       		.uleb128 0xc
 2524 0107 03       		.uleb128 0x3
 2525 0108 0E       		.uleb128 0xe
 2526 0109 3A       		.uleb128 0x3a
 2527 010a 0B       		.uleb128 0xb
 2528 010b 3B       		.uleb128 0x3b
 2529 010c 0B       		.uleb128 0xb
 2530 010d 27       		.uleb128 0x27
 2531 010e 0C       		.uleb128 0xc
 2532 010f 49       		.uleb128 0x49
 2533 0110 13       		.uleb128 0x13
 2534 0111 11       		.uleb128 0x11
 2535 0112 01       		.uleb128 0x1
 2536 0113 12       		.uleb128 0x12
 2537 0114 01       		.uleb128 0x1
 2538 0115 40       		.uleb128 0x40
 2539 0116 06       		.uleb128 0x6
 2540 0117 01       		.uleb128 0x1
 2541 0118 13       		.uleb128 0x13
 2542 0119 00       		.byte	0x0
 2543 011a 00       		.byte	0x0
 2544 011b 16       		.uleb128 0x16
 2545 011c 18       		.uleb128 0x18
 2546 011d 00       		.byte	0x0
 2547 011e 00       		.byte	0x0
 2548 011f 00       		.byte	0x0
 2549 0120 17       		.uleb128 0x17
 2550 0121 2E       		.uleb128 0x2e
 2551 0122 01       		.byte	0x1
 2552 0123 3F       		.uleb128 0x3f
 2553 0124 0C       		.uleb128 0xc
 2554 0125 03       		.uleb128 0x3
 2555 0126 0E       		.uleb128 0xe
 2556 0127 3A       		.uleb128 0x3a
 2557 0128 0B       		.uleb128 0xb
 2558 0129 3B       		.uleb128 0x3b
 2559 012a 05       		.uleb128 0x5
 2560 012b 27       		.uleb128 0x27
 2561 012c 0C       		.uleb128 0xc
 2562 012d 49       		.uleb128 0x49
 2563 012e 13       		.uleb128 0x13
 2564 012f 11       		.uleb128 0x11
 2565 0130 01       		.uleb128 0x1
 2566 0131 12       		.uleb128 0x12
 2567 0132 01       		.uleb128 0x1
 2568 0133 40       		.uleb128 0x40
 2569 0134 06       		.uleb128 0x6
 2570 0135 00       		.byte	0x0
 2571 0136 00       		.byte	0x0
 2572 0137 18       		.uleb128 0x18
 2573 0138 05       		.uleb128 0x5
 2574 0139 00       		.byte	0x0
 2575 013a 03       		.uleb128 0x3
 2576 013b 08       		.uleb128 0x8
 2577 013c 3A       		.uleb128 0x3a
 2578 013d 0B       		.uleb128 0xb
ARM GAS  /tmp/ccEnCxJF.s 			page 61


 2579 013e 3B       		.uleb128 0x3b
 2580 013f 05       		.uleb128 0x5
 2581 0140 49       		.uleb128 0x49
 2582 0141 13       		.uleb128 0x13
 2583 0142 02       		.uleb128 0x2
 2584 0143 0A       		.uleb128 0xa
 2585 0144 00       		.byte	0x0
 2586 0145 00       		.byte	0x0
 2587 0146 00       		.byte	0x0
 2588              		.section	.debug_pubnames,"",%progbits
 2589 0000 3C000000 		.4byte	0x3c
 2590 0004 0200     		.2byte	0x2
 2591 0006 00000000 		.4byte	.Ldebug_info0
 2592 000a EC030000 		.4byte	0x3ec
 2593 000e CE020000 		.4byte	0x2ce
 2594 0012 7072696E 		.ascii	"printf\000"
 2594      746600
 2595 0019 09030000 		.4byte	0x309
 2596 001d 73707269 		.ascii	"sprintf\000"
 2596      6E746600 
 2597 0025 52030000 		.4byte	0x352
 2598 0029 736E7072 		.ascii	"snprintf\000"
 2598      696E7466 
 2598      00
 2599 0032 A9030000 		.4byte	0x3a9
 2600 0036 77726974 		.ascii	"write\000"
 2600      6500
 2601 003c 00000000 		.4byte	0x0
 2602              		.section	.debug_aranges,"",%progbits
 2603 0000 54000000 		.4byte	0x54
 2604 0004 0200     		.2byte	0x2
 2605 0006 00000000 		.4byte	.Ldebug_info0
 2606 000a 04       		.byte	0x4
 2607 000b 00       		.byte	0x0
 2608 000c 0000     		.2byte	0x0
 2609 000e 0000     		.2byte	0x0
 2610 0010 00000000 		.4byte	.LFB0
 2611 0014 30000000 		.4byte	.LFE0-.LFB0
 2612 0018 00000000 		.4byte	.LFB1
 2613 001c D2000000 		.4byte	.LFE1-.LFB1
 2614 0020 00000000 		.4byte	.LFB2
 2615 0024 F6000000 		.4byte	.LFE2-.LFB2
 2616 0028 00000000 		.4byte	.LFB3
 2617 002c 1C020000 		.4byte	.LFE3-.LFB3
 2618 0030 00000000 		.4byte	.LFB4
 2619 0034 2C000000 		.4byte	.LFE4-.LFB4
 2620 0038 00000000 		.4byte	.LFB5
 2621 003c 30000000 		.4byte	.LFE5-.LFB5
 2622 0040 00000000 		.4byte	.LFB6
 2623 0044 32000000 		.4byte	.LFE6-.LFB6
 2624 0048 00000000 		.4byte	.LFB7
 2625 004c 1C000000 		.4byte	.LFE7-.LFB7
 2626 0050 00000000 		.4byte	0x0
 2627 0054 00000000 		.4byte	0x0
 2628              		.section	.debug_ranges,"",%progbits
 2629              	.Ldebug_ranges0:
 2630 0000 00000000 		.4byte	.Ltext0
ARM GAS  /tmp/ccEnCxJF.s 			page 62


 2631 0004 00000000 		.4byte	.Letext0
 2632 0008 00000000 		.4byte	.LFB0
 2633 000c 30000000 		.4byte	.LFE0
 2634 0010 00000000 		.4byte	.LFB1
 2635 0014 D2000000 		.4byte	.LFE1
 2636 0018 00000000 		.4byte	.LFB2
 2637 001c F6000000 		.4byte	.LFE2
 2638 0020 00000000 		.4byte	.LFB3
 2639 0024 1C020000 		.4byte	.LFE3
 2640 0028 00000000 		.4byte	.LFB4
 2641 002c 2C000000 		.4byte	.LFE4
 2642 0030 00000000 		.4byte	.LFB5
 2643 0034 30000000 		.4byte	.LFE5
 2644 0038 00000000 		.4byte	.LFB6
 2645 003c 32000000 		.4byte	.LFE6
 2646 0040 00000000 		.4byte	.LFB7
 2647 0044 1C000000 		.4byte	.LFE7
 2648 0048 00000000 		.4byte	0x0
 2649 004c 00000000 		.4byte	0x0
 2650              		.section	.debug_macinfo
 2651 0eae 00       		.byte	0x0
 2652              		.section	.debug_str,"MS",%progbits,1
 2653              	.LASF8:
 2654 0000 6C657462 		.ascii	"letbase\000"
 2654      61736500 
 2655              	.LASF3:
 2656 0008 73747269 		.ascii	"string\000"
 2656      6E6700
 2657              	.LASF5:
 2658 000f 70616463 		.ascii	"padchar\000"
 2658      68617200 
 2659              	.LASF23:
 2660 0017 7072696E 		.ascii	"printchar\000"
 2660      74636861 
 2660      7200
 2661              	.LASF20:
 2662 0021 2F686F6D 		.ascii	"/home/cas/Documentos/casainho-projects/trunk/sdcard"
 2662      652F6361 
 2662      732F446F 
 2662      63756D65 
 2662      6E746F73 
 2663 0054 5F626174 		.ascii	"_bathroom_scale/firmware/beurer_bg_16/Firmware/Free"
 2663      68726F6F 
 2663      6D5F7363 
 2663      616C652F 
 2663      6669726D 
 2664 0087 52544F53 		.ascii	"RTOS-LPC17x8\000"
 2664      2D4C5043 
 2664      31377838 
 2664      00
 2665              	.LASF9:
 2666 0094 7072696E 		.ascii	"print_buf\000"
 2666      745F6275 
 2666      6600
 2667              	.LASF11:
 2668 009e 7072696E 		.ascii	"print\000"
 2668      7400
ARM GAS  /tmp/ccEnCxJF.s 			page 63


 2669              	.LASF15:
 2670 00a4 73707269 		.ascii	"sprintf\000"
 2670      6E746600 
 2671              	.LASF24:
 2672 00ac 77726974 		.ascii	"write\000"
 2672      6500
 2673              	.LASF18:
 2674 00b2 474E5520 		.ascii	"GNU C 4.4.1\000"
 2674      4320342E 
 2674      342E3100 
 2675              	.LASF21:
 2676 00be 5F5F7661 		.ascii	"__va_list\000"
 2676      5F6C6973 
 2676      7400
 2677              	.LASF16:
 2678 00c8 736E7072 		.ascii	"snprintf\000"
 2678      696E7466 
 2678      00
 2679              	.LASF1:
 2680 00d1 76615F6C 		.ascii	"va_list\000"
 2680      69737400 
 2681              	.LASF4:
 2682 00d9 77696474 		.ascii	"width\000"
 2682      6800
 2683              	.LASF17:
 2684 00df 636F756E 		.ascii	"count\000"
 2684      7400
 2685              	.LASF19:
 2686 00e5 7072696E 		.ascii	"printf-stdarg.c\000"
 2686      74662D73 
 2686      74646172 
 2686      672E6300 
 2687              	.LASF12:
 2688 00f5 666F726D 		.ascii	"format\000"
 2688      617400
 2689              	.LASF14:
 2690 00fc 7072696E 		.ascii	"printf\000"
 2690      746600
 2691              	.LASF7:
 2692 0103 7072696E 		.ascii	"printi\000"
 2692      746900
 2693              	.LASF0:
 2694 010a 5F5F676E 		.ascii	"__gnuc_va_list\000"
 2694      75635F76 
 2694      615F6C69 
 2694      737400
 2695              	.LASF10:
 2696 0119 756E7369 		.ascii	"unsigned int\000"
 2696      676E6564 
 2696      20696E74 
 2696      00
 2697              	.LASF13:
 2698 0126 61726773 		.ascii	"args\000"
 2698      00
 2699              	.LASF6:
 2700 012b 7072696E 		.ascii	"prints\000"
 2700      747300
ARM GAS  /tmp/ccEnCxJF.s 			page 64


 2701              	.LASF2:
 2702 0132 63686172 		.ascii	"char\000"
 2702      00
 2703              	.LASF22:
 2704 0137 5F5F6170 		.ascii	"__ap\000"
 2704      00
 2705              		.ident	"GCC: (Sourcery G++ Lite 2009q3-68) 4.4.1"
ARM GAS  /tmp/ccEnCxJF.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 printf-stdarg.c
     /tmp/ccEnCxJF.s:476    .text.printchar:00000000 $t
     /tmp/ccEnCxJF.s:480    .text.printchar:00000000 printchar
     /tmp/ccEnCxJF.s:519    .text.prints:00000000 $t
     /tmp/ccEnCxJF.s:523    .text.prints:00000000 prints
     /tmp/ccEnCxJF.s:651    .text.printi:00000000 $t
     /tmp/ccEnCxJF.s:655    .text.printi:00000000 printi
     /tmp/ccEnCxJF.s:794    .rodata:00000000 $d
     /tmp/ccEnCxJF.s:795    .rodata:00000000 .LC0
     /tmp/ccEnCxJF.s:798    .text.print:00000000 $t
     /tmp/ccEnCxJF.s:802    .text.print:00000000 print
     /tmp/ccEnCxJF.s:1106   .text.printf:00000000 $t
     /tmp/ccEnCxJF.s:1111   .text.printf:00000000 printf
     /tmp/ccEnCxJF.s:1143   .text.sprintf:00000000 $t
     /tmp/ccEnCxJF.s:1148   .text.sprintf:00000000 sprintf
     /tmp/ccEnCxJF.s:1182   .text.snprintf:00000000 $t
     /tmp/ccEnCxJF.s:1187   .text.snprintf:00000000 snprintf
     /tmp/ccEnCxJF.s:1222   .text.write:00000000 $t
     /tmp/ccEnCxJF.s:1227   .text.write:00000000 write
     /tmp/ccEnCxJF.s:1265   .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
